{"version":3,"file":"index.modern.mjs","sources":["../src/lib/expressions/embedding.ts","../src/lib/expressions/functions.ts","../src/lib/expressions/parser.ts","../src/lib/utils/path.ts","../src/lib/expressions/evaluator.ts","../src/lib/expressions/index.ts","../src/types.ts","../src/lib/parser/ast.ts","../src/lib/workflow/uses.ts","../src/lib/workflow/normalize.ts","../src/lib/expressions/types.ts","../src/lib/expressions/validator.ts","../src/lib/parser/schema.ts","../src/lib/parser/validator.ts","../src/lib/parser/parser.ts","../src/lib/parser/complete.ts","../src/lib/expressions/completion.ts","../src/lib/parser/hover.ts","../src/lib/utils/deepMerge.ts","../src/lib/events/eventPayload.ts","../src/lib/workflowschema/contextProvider.ts","../src/lib/workflowschema/contextCompletion.ts","../src/lib/workflowschema/schema/events.ts","../src/lib/workflowschema/schema/needs.ts","../src/lib/workflowschema/valueProvider/actionsInputProvider.ts","../src/lib/workflowschema/workflowSchema.ts","../src/lib/utils/cache.ts"],"sourcesContent":["export const expressionMarker = /\\$\\{\\{(.*?)\\}\\}/gm;\n\nexport function containsExpression(input: string): boolean {\n  return input?.match && input.match(expressionMarker) !== null;\n}\n\nexport function removeExpressionMarker(input: string): string {\n  return input.replace(expressionMarker, (_, g) => g);\n}\n\nexport function iterateExpressions(\n  input: string,\n  f: (expression: string, pos: number, length: number) => void\n) {\n  for (const match of Array.from(input.matchAll(expressionMarker))) {\n    f(match[0], match.index!, match.length);\n  }\n}\n","import { ExpressionContext } from \"./evaluator\";\nimport { evaluateExpression } from \"./index\";\n\nconst funcDescription = {\n  tojson:\n    \"Returns a pretty-print JSON representation of `value`. You can use this function to debug the information provided in contexts.\",\n};\n\nexport const Undetermined = {};\n\nexport function getFunctionDescription(f: string): string | undefined {\n  return funcDescription[f?.toLowerCase()];\n}\n\nexport function contains<T>(haystack: T | T[], needle: T): boolean {\n  if (Array.isArray(haystack)) {\n    return haystack.indexOf(needle) !== -1;\n  } else {\n    return (\n      (\"\" + haystack)\n        .toLocaleLowerCase()\n        .indexOf((\"\" + needle).toLocaleLowerCase()) !== -1\n    );\n  }\n}\n\nexport function startsWith(haystack: string, needle: string): boolean {\n  return haystack.startsWith(needle);\n}\n\nexport function endsWith(haystack: string, needle: string): boolean {\n  return haystack.endsWith(needle);\n}\n\nexport function join<T>(arr: T[], separator?: string): string {\n  return arr.join(separator);\n}\n\nexport function toJSON(input: unknown): string {\n  return JSON.stringify(input);\n}\n\nexport function fromJSON(input: string | typeof Undetermined): unknown {\n  if (typeof input === \"string\") {\n    return JSON.parse(input);\n  }\n\n  if (input === Undetermined) {\n    return Undetermined;\n  }\n\n  throw new Error(\"Unknown input for `fromJSON`\");\n}\n\nexport function hashFiles(path: string[]): string {\n  return `sha-256-hash-for-${path.join()}`;\n}\n\nexport function format(format: string, ...params: string[]): string {\n  let idx = 0;\n  format = format.replace(/(\\{\\d+\\})/gm, () => params[idx++]);\n  return format.replace(\"{{\", \"{\").replace(\"}}\", \"}\");\n}\n\nexport function always(_context: ExpressionContext): boolean {\n  return true;\n}\n\nexport function failure(context: ExpressionContext) {\n  return context.contextProvider.get('job') === 'failure';\n}\n\nexport function success(context: ExpressionContext) {\n  return context.contextProvider.get('job') === 'success';\n}\n\nexport function cancelled(context: ExpressionContext) {\n  return context.contextProvider.get('job') === 'cancelled';\n}\n","import * as chevrotain from \"chevrotain\";\n\n///////\n// Copy the content between here,\n\nconst True = chevrotain.createToken({ name: \"True\", pattern: /true/ });\nconst False = chevrotain.createToken({ name: \"False\", pattern: /false/ });\nconst Null = chevrotain.createToken({ name: \"Null\", pattern: /null/ });\nconst LParens = chevrotain.createToken({ name: \"LParens\", pattern: /\\(/ });\nexport const RParens = chevrotain.createToken({\n  name: \"RParens\",\n  pattern: /\\)/,\n});\nconst LSquare = chevrotain.createToken({ name: \"LSquare\", pattern: /\\[/ });\nexport const RSquare = chevrotain.createToken({\n  name: \"RSquare\",\n  pattern: /]/,\n});\nexport const Comma = chevrotain.createToken({ name: \"Comma\", pattern: /,/ });\n\n/**\n * Expressions cannot use arbitrary variables, everything needs to be access via a context,\n * so define all supported ones.\n * see https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#contexts\n */\nexport const Dot = chevrotain.createToken({ name: \"Dot\", pattern: /\\./ });\nexport const ContextMemberOrKeyword = chevrotain.createToken({\n  name: \"ContextMemberOrKeyword\",\n  pattern: chevrotain.Lexer.NA,\n});\nexport const ContextMember = chevrotain.createToken({\n  name: \"ContextMember\",\n  pattern: /[a-zA-Z_][a-zA-Z0-9-_]*/,\n  categories: ContextMemberOrKeyword,\n});\nexport const Context = chevrotain.createToken({\n  name: \"Context\",\n  pattern: chevrotain.Lexer.NA,\n  longer_alt: ContextMember,\n});\nexport const Contexts = [\n  \"github\",\n  \"env\",\n  \"job\",\n  \"steps\",\n  \"runner\",\n  \"secrets\",\n  \"strategy\",\n  \"matrix\",\n  \"needs\",\n  \"inputs\",\n].map((c) =>\n  chevrotain.createToken({\n    name: `Context${c}`,\n    pattern: new RegExp(`${c}`),\n    categories: [Context, ContextMemberOrKeyword],\n    longer_alt: ContextMember,\n  })\n);\n\n//\n// Operators\n//\nexport const Operator = chevrotain.createToken({\n  name: \"Operator\",\n  pattern: chevrotain.Lexer.NA,\n  longer_alt: ContextMember,\n});\nexport const And = chevrotain.createToken({\n  name: \"And\",\n  pattern: /&&/,\n  categories: Operator,\n});\nexport const Or = chevrotain.createToken({\n  name: \"Or\",\n  pattern: /\\|\\|/,\n  categories: Operator,\n});\nexport const Eq = chevrotain.createToken({\n  name: \"Eq\",\n  pattern: /==/,\n  categories: Operator,\n});\nexport const NEq = chevrotain.createToken({\n  name: \"NotEq\",\n  pattern: /!=/,\n  categories: Operator,\n});\nexport const LT = chevrotain.createToken({\n  name: \"LT\",\n  pattern: /</,\n  categories: Operator,\n});\nexport const LTE = chevrotain.createToken({\n  name: \"LTE\",\n  pattern: /<=/,\n  categories: Operator,\n});\nexport const GT = chevrotain.createToken({\n  name: \"GT\",\n  pattern: />/,\n  categories: Operator,\n});\nexport const GTE = chevrotain.createToken({\n  name: \"GTE\",\n  pattern: />=/,\n  categories: Operator,\n});\nexport const Not = chevrotain.createToken({\n  name: \"Not\",\n  pattern: /!/,\n  categories: Operator,\n});\n\n//\n// Functions\n//\n// TODO: Adding all functions as tokens might not be the best idea, but this way we get validation during parsing\nexport const Function = chevrotain.createToken({\n  name: \"Function\",\n  pattern: chevrotain.Lexer.NA,\n  longer_alt: ContextMember,\n});\nexport const contains = chevrotain.createToken({\n  name: \"contains\",\n  pattern: /contains/i,\n  categories: [Function, ContextMemberOrKeyword],\n  longer_alt: ContextMember,\n});\nexport const startsWith = chevrotain.createToken({\n  name: \"startsWith\",\n  pattern: /startsWith/i,\n  categories: [Function, ContextMemberOrKeyword],\n  longer_alt: ContextMember,\n});\nexport const endsWith = chevrotain.createToken({\n  name: \"endsWith\",\n  pattern: /endsWith/i,\n  categories: [Function, ContextMemberOrKeyword],\n  longer_alt: ContextMember,\n});\nexport const join = chevrotain.createToken({\n  name: \"join\",\n  pattern: /join/i,\n  categories: [Function, ContextMemberOrKeyword],\n  longer_alt: ContextMember,\n});\nexport const toJSON = chevrotain.createToken({\n  name: \"toJSON\",\n  pattern: /toJSON/i,\n  categories: [Function, ContextMemberOrKeyword],\n  longer_alt: ContextMember,\n});\nexport const fromJSON = chevrotain.createToken({\n  name: \"fromJSON\",\n  pattern: /fromJSON/i,\n  categories: [Function, ContextMemberOrKeyword],\n  longer_alt: ContextMember,\n});\nexport const hashFiles = chevrotain.createToken({\n  name: \"hashFiles\",\n  pattern: /hashFiles/i,\n  categories: [Function, ContextMemberOrKeyword],\n  longer_alt: ContextMember,\n});\nexport const success = chevrotain.createToken({\n  name: \"success\",\n  pattern: /success/i,\n  categories: [Function, ContextMemberOrKeyword],\n  longer_alt: ContextMember,\n});\nexport const always = chevrotain.createToken({\n  name: \"always\",\n  pattern: /always/i,\n  categories: [Function, ContextMemberOrKeyword],\n  longer_alt: ContextMember,\n});\nexport const failure = chevrotain.createToken({\n  name: \"failure\",\n  pattern: /failure/i,\n  categories: [Function, ContextMemberOrKeyword],\n  longer_alt: ContextMember,\n});\nexport const format = chevrotain.createToken({\n  name: \"format\",\n  pattern: /format/i,\n  categories: [Function, ContextMemberOrKeyword],\n  longer_alt: ContextMember,\n});\nexport const cancelled = chevrotain.createToken({\n  name: \"cancelled\",\n  pattern: /cancelled/i,\n  categories: [Function, ContextMemberOrKeyword],\n  longer_alt: ContextMember,\n});\nconst Functions = [\n  contains,\n  startsWith,\n  endsWith,\n  join,\n  toJSON,\n  fromJSON,\n  hashFiles,\n  success,\n  always,\n  failure,\n  format,\n  cancelled,\n];\n\nexport const StringLiteral = chevrotain.createToken({\n  name: \"StringLiteral\",\n  //pattern: /'(:?[^'']|\\\\(:?[bfnrtv\\\\/]|u[0-9a-fA-F]{4}))*'/,\n  pattern: /'((?:''|[^'])*)'/,\n});\nexport const NumberLiteral = chevrotain.createToken({\n  name: \"NumberLiteral\",\n  pattern: /-?(0|[1-9]\\d*)(\\.\\d+)?([eE][+-]?\\d+)?/,\n});\nexport const WhiteSpace = chevrotain.createToken({\n  name: \"WhiteSpace\",\n  pattern: /[ \\t\\n\\r]+/,\n  group: chevrotain.Lexer.SKIPPED,\n});\n\nconst allTokens = [\n  WhiteSpace,\n  NumberLiteral,\n\n  // Built-in functions\n  Function,\n  contains,\n  startsWith,\n  format,\n  endsWith,\n  join,\n  toJSON,\n  fromJSON,\n  hashFiles,\n  success,\n  always,\n  cancelled,\n  failure,\n\n  StringLiteral,\n  LParens,\n  RParens,\n  LSquare,\n  RSquare,\n  Comma,\n\n  // Operators\n  Operator,\n  And,\n  Or,\n  Eq,\n  NEq,\n  LTE,\n  LT,\n  GTE,\n  GT,\n  Not,\n\n  // Literals\n  True,\n  False,\n  Null,\n\n  // Contexts (github, env, etc.)\n  Context,\n  ...Contexts,\n  Dot,\n  ContextMemberOrKeyword,\n  ContextMember,\n];\nconst ExpressionLexer = new chevrotain.Lexer(allTokens);\n\nexport class ExpressionParser extends chevrotain.CstParser {\n  constructor() {\n    super(allTokens);\n    this.performSelfAnalysis();\n  }\n\n  expression = this.RULE(\"expression\", () => {\n    //this.OPTION(() => {\n    this.SUBRULE1(this.subExpression, { LABEL: \"lhs\" });\n    this.MANY(() => {\n      this.CONSUME(Operator);\n      this.SUBRULE2(this.subExpression, { LABEL: \"rhs\" });\n    });\n    //});\n  });\n\n  subExpression = this.RULE(\"subExpression\", () => {\n    this.OPTION(() => this.CONSUME(Not));\n    this.OR([\n      { ALT: () => this.SUBRULE(this.logicalGrouping) },\n      { ALT: () => this.SUBRULE(this.functionCall) },\n      { ALT: () => this.SUBRULE(this.contextAccess) },\n      { ALT: () => this.SUBRULE(this.value) },\n      { ALT: () => this.SUBRULE(this.array) },\n    ]);\n  });\n\n  contextAccess = this.RULE(\"contextAccess\", () => {\n    this.OR(\n      Contexts.map((f) => ({\n        ALT: () => this.CONSUME(f),\n      }))\n    );\n\n    this.MANY(() => {\n      this.SUBRULE(this.contextMember);\n    });\n  });\n\n  contextMember = this.RULE(\"contextMember\", () => {\n    this.OR([\n      { ALT: () => this.SUBRULE(this.contextDotMember) },\n      { ALT: () => this.SUBRULE(this.contextBoxMember) },\n    ]);\n  });\n\n  contextDotMember = this.RULE(\"contextDotMember\", () => {\n    this.CONSUME(Dot);\n    this.CONSUME(ContextMemberOrKeyword);\n  });\n\n  contextBoxMember = this.RULE(\"contextBoxMember\", () => {\n    this.CONSUME(LSquare);\n    this.SUBRULE(this.expression);\n    this.CONSUME(RSquare);\n  });\n\n  array = this.RULE(\"array\", () => {\n    this.CONSUME(LSquare);\n    this.MANY_SEP({\n      SEP: Comma,\n      DEF: () => {\n        this.SUBRULE(this.subExpression);\n      },\n    });\n    this.CONSUME(RSquare);\n  });\n\n  logicalGrouping = this.RULE(\"logicalGrouping\", () => {\n    this.CONSUME(LParens);\n    this.SUBRULE(this.expression);\n    this.CONSUME(RParens);\n  });\n\n  functionCall = this.RULE(\"functionCall\", () => {\n    this.OR1([\n      // fromJSON is the only function that might return an object, and then allow context access\n      {\n        ALT: () => {\n          this.CONSUME(fromJSON);\n          this.SUBRULE1(this.functionParameters);\n          this.OPTION(() => this.SUBRULE(this.contextMember));\n        },\n      },\n      {\n        ALT: () => {\n          this.OR2(\n            Functions.filter((f) => f !== fromJSON).map((f) => ({\n              ALT: () => this.CONSUME(f),\n            }))\n          );\n\n          this.SUBRULE2(this.functionParameters);\n        },\n      },\n    ]);\n  });\n\n  functionParameters = this.RULE(\"functionParameters\", () => {\n    this.CONSUME(LParens);\n    this.MANY_SEP({\n      SEP: Comma,\n      DEF: () => {\n        this.SUBRULE(this.expression);\n      },\n    });\n    this.CONSUME(RParens);\n  });\n\n  value = this.RULE(\"value\", () => {\n    this.OR([\n      { ALT: () => this.CONSUME(StringLiteral) },\n      { ALT: () => this.CONSUME(NumberLiteral) },\n      { ALT: () => this.SUBRULE(this.booleanValue) },\n      { ALT: () => this.CONSUME(Null) },\n    ]);\n  });\n\n  booleanValue = this.RULE(\"booleanValue\", () => {\n    this.OR([\n      { ALT: () => this.CONSUME(True) },\n      { ALT: () => this.CONSUME(False) },\n    ]);\n  });\n}\n\n// return {\n//   lexer: ExpressionLexer,\n//   parser: ExpressionParser,\n//   defaultRule: \"expression\",\n// };\n// and here to the playground for visualization.\n//////////\n\n// reuse the same parser instance.\nexport const defaultRule = \"expression\";\nexport const parser = new ExpressionParser();\nexport const BaseCstVisitor = parser.getBaseCstVisitorConstructor();\nexport { ExpressionLexer };\n","export type PropertyPath = (string | number | [string, number])[];\n\nexport function iteratePath(\n  path: PropertyPath,\n  obj: any,\n  f?: (x: any) => void\n) {\n  for (const p of path) {\n    if (p == \"$\") continue;\n    if (!obj) break;\n\n    f && f(obj);\n\n    if (typeof p === \"string\" || typeof p === \"number\") {\n      obj = obj[p];\n    } else {\n      // Sequence\n      obj = obj[p[0]][p[1]];\n    }\n  }\n\n  return obj;\n}\n","import * as Functions from \"./functions\";\n\nimport {\n  And,\n  BaseCstVisitor,\n  Contexts,\n  Eq,\n  GT,\n  GTE,\n  LT,\n  LTE,\n  NEq,\n  Or,\n} from \"./parser\";\nimport { PropertyPath, iteratePath } from \"../utils/path\";\n\nimport { ContextProvider } from \"./types\";\nimport { tokenMatcher } from \"chevrotain\";\nimport { evaluateExpression } from \"./index\";\n\nexport interface ExpressionContext {\n  contextProvider: ContextProvider;\n}\n\n/**\n * This evaluates an expression by operation on the CST produced by the parser.\n */\nexport class ExpressionEvaluator extends BaseCstVisitor {\n  constructor() {\n    super();\n\n    this.validateVisitor();\n  }\n\n  expression(ctx: any, context: ExpressionContext) {\n    let result = this.visit(ctx.lhs, context);\n\n    if (ctx.rhs) {\n      ctx.rhs.forEach((rhsOperand, idx) => {\n        let rhsResult = this.visit(rhsOperand, context);\n        const operator = ctx.Operator[idx];\n\n        // Coerce types\n        if (typeof result != typeof rhsResult) {\n          result = this._coerceValue(result);\n          rhsResult = this._coerceValue(rhsResult);\n        }\n\n        switch (true) {\n          // ==\n          case tokenMatcher(operator, Eq):\n            result = result == rhsResult;\n            break;\n\n          // !=\n          case tokenMatcher(operator, NEq):\n            result = result != rhsResult;\n            break;\n\n          // &&\n          case tokenMatcher(operator, And):\n            result = result && rhsResult;\n            break;\n\n          // ||\n          case tokenMatcher(operator, Or):\n            result = result || rhsResult;\n            break;\n\n          // <\n          case tokenMatcher(operator, LT):\n            result = result < rhsResult;\n            break;\n\n          // <=\n          case tokenMatcher(operator, LTE):\n            result = result <= rhsResult;\n            break;\n\n          // >\n          case tokenMatcher(operator, GT):\n            result = result > rhsResult;\n            break;\n\n          // >=\n          case tokenMatcher(operator, GTE):\n            result = result >= rhsResult;\n            break;\n        }\n      });\n    }\n\n    return result;\n  }\n\n  subExpression(ctx: any, context: ExpressionContext) {\n    let result: any;\n\n    switch (true) {\n      case !!ctx.value:\n        result = this.visit(ctx.value, context);\n        break;\n\n      case !!ctx.logicalGrouping:\n        result = this.visit(ctx.logicalGrouping, context);\n        break;\n\n      case !!ctx.array:\n        result = this.visit(ctx.array, context);\n        break;\n\n      case !!ctx.functionCall:\n        result = this.visit(ctx.functionCall, context);\n        break;\n\n      case !!ctx.contextAccess:\n        result = this.visit(ctx.contextAccess, context);\n        break;\n    }\n\n    if (!!ctx.Not) {\n      result = !result;\n    }\n\n    return result;\n  }\n\n  contextAccess(ctx: any, context: ExpressionContext) {\n    const contextName = Contexts.map((c) => (c.PATTERN as RegExp).source).find(\n      (c) => !!ctx[`Context${c}`]\n    );\n    if (!contextName) {\n      throw new Error(\"Unknown context: \" + contextName);\n    }\n\n    // Aggregate path\n    const p: PropertyPath = [];\n    if (!!ctx.contextMember) {\n      for (const cM of ctx.contextMember as any[]) {\n        this.visit(cM, { path: p, context });\n      }\n    }\n\n    const r = this.getContextValue(contextName, p, context);\n    return r;\n  }\n\n  protected getContextValue(\n    contextName: string,\n    path: PropertyPath,\n    context: ExpressionContext\n  ) {\n    const contextObject = context.contextProvider.get(contextName as any);\n    const result = iteratePath(path, contextObject);\n\n    if(result === false || result === 0 )\n    return result;\n    if(result === null || result === undefined )\n    return \"\";\n    else\n    return result;\n  }\n\n  contextMember(\n    ctx: any,\n    { path, context }: { path: PropertyPath; context: ExpressionContext }\n  ) {\n    switch (true) {\n      case !!ctx.contextDotMember:\n        return this.visit(ctx.contextDotMember, path);\n\n      case !!ctx.contextBoxMember:\n        return this.visit(ctx.contextBoxMember, { path, context });\n    }\n  }\n\n  contextDotMember(ctx: any, path: PropertyPath) {\n    const p = ctx.ContextMemberOrKeyword[0].image;\n    path.push(p);\n  }\n\n  contextBoxMember(\n    ctx: any,\n    { path, context }: { path: PropertyPath; context: ExpressionContext }\n  ) {\n    const p = this.visit(ctx.expression, context);\n    path.push(this._coerceValue(p, true));\n  }\n\n  logicalGrouping(ctx: any, context: ExpressionContext) {\n    return this.visit(ctx.expression, context);\n  }\n\n  array(ctx: any) {\n    const result: any[] = [];\n\n    if (ctx.subExpression) {\n      result.push(...ctx.subExpression.map((se) => this.visit(se)));\n    }\n\n    return result;\n  }\n\n  functionCall(ctx: any, context: ExpressionContext) {\n    const parameters = this.visit(ctx.functionParameters, context);\n\n    switch (true) {\n      case !!ctx.contains:\n        return Functions.contains(parameters[0], parameters[1]);\n\n      case !!ctx.startsWith:\n        return Functions.startsWith(parameters[0], parameters[1]);\n\n      case !!ctx.endsWith:\n        return Functions.endsWith(parameters[0], parameters[1]);\n\n      case !!ctx.join:\n        return Functions.join(parameters[0], parameters[1]);\n\n      case !!ctx.toJSON:\n        return Functions.toJSON(parameters[0]);\n\n      case !!ctx.fromJSON: {\n        const result = Functions.fromJSON(parameters[0]);\n\n        if (!!ctx.contextMember) {\n          const p: PropertyPath = [];\n          for (const cM of ctx.contextMember as any[]) {\n            this.visit(cM, { path: p, context });\n          }\n          return iteratePath(p, result);\n        }\n\n        return result;\n      }\n\n      case !!ctx.hashFiles:\n        return Functions.hashFiles(parameters);\n\n      case !!ctx.format:\n        return Functions.format(parameters[0], ...parameters.slice(1));\n\n      case !!ctx.always:\n        return Functions.always(context);\n\n      case !!ctx.failure:\n        return Functions.failure(context);\n\n      case !!ctx.success:\n        return Functions.success(context);\n\n      case !!ctx.cancelled:\n        return Functions.cancelled(context);\n    }\n\n    return undefined;\n  }\n\n  functionParameters(ctx: any, context: ExpressionContext) {\n    return (ctx.expression || []).map((p) => this.visit(p, context));\n  }\n\n  value(ctx: any) {\n    switch (true) {\n      case !!ctx.NumberLiteral:\n        return parseFloat(ctx.NumberLiteral[0].image);\n\n      case !!ctx.booleanValue:\n        return this.visit(ctx.booleanValue);\n\n      case !!ctx.Null:\n        return null;\n\n      case !!ctx.StringLiteral: {\n        const value: string = ctx.StringLiteral[0].image;\n        return this._removeQuotes(value);\n      }\n    }\n  }\n\n  booleanValue(ctx: any) {\n    switch (true) {\n      case !!ctx.True:\n        return true;\n\n      default:\n      case !!ctx.False:\n        return false;\n    }\n  }\n\n  private _coerceValue(\n    val: number | string | boolean | null,\n    keepString = false\n  ): number | string {\n    if (typeof val === \"number\") {\n      return val;\n    }\n\n    if (typeof val === \"string\") {\n      if (keepString) {\n        return val;\n      }\n\n      if (val === \"\") {\n        return 0;\n      }\n\n      return +val;\n    }\n\n    if (val === null) {\n      return 0;\n    }\n\n    if (val === true) {\n      return 1;\n    }\n\n    if (val === false) {\n      return 0;\n    }\n\n    return NaN;\n  }\n\n  private _removeQuotes(value: string): string {\n    return \"\" + value.substring(1, value.length - 1).replace(/''/g, \"'\");\n  }\n}\n\nexport const evaluator = new ExpressionEvaluator();\n","import { ILexingError, IRecognitionException } from \"chevrotain\";\nimport { expressionMarker } from \"./embedding\";\nimport { evaluator } from \"./evaluator\";\nimport { ExpressionLexer, parser } from \"./parser\";\nimport { ContextProvider } from \"./types\";\n\n// Work-around:\n// Export this to prevent name mangling, which breaks chevrotain's `functionName`\n// logic.\nexport { ExpressionParser } from \"./parser\";\n\nexport class ExpressionError extends Error {\n  constructor(\n    public lexErrors: ILexingError[],\n    public parseErrors: IRecognitionException[]\n  ) {\n    super(\n      `${lexErrors.map((x) => x.message).join()} ${parseErrors\n        .map((x) => x.message)\n        .join()}`\n    );\n  }\n}\n\nexport function parseExpression(expression: string) {\n  const lexResult = ExpressionLexer.tokenize(expression);\n  parser.input = lexResult.tokens;\n  const cst = parser.expression();\n  return cst;\n}\n\n/**\n * Evaluates a single expression with the given context\n *\n * @param expression Expression to evaluate, with or without ${{ }} marker\n * @param contextProvider Context provider for evaluation\n */\nexport function evaluateExpression(\n  expression: string,\n  contextProvider: ContextProvider\n) {\n  // This expects a single expression in the form of \"<expr>\" or \"${{ <expr> }}\". Remove the\n  // ${{ }} markers\n  expression = expression.replace(expressionMarker, (_, g) => g);\n\n  const lexResult = ExpressionLexer.tokenize(expression);\n\n  // setting a new input will RESET the parser instance's state.\n  parser.input = lexResult.tokens;\n\n  // any top level rule may be used as an entry point\n  const cst = parser.expression();\n\n  const result = evaluator.visit(cst, { contextProvider });\n\n  if (lexResult.errors.length > 0 || parser.errors.length > 0) {\n    throw new ExpressionError(lexResult.errors, parser.errors);\n  }\n\n  return result;\n}\n\n/**\n * Evaluates and replaces zero or more expressions in a string. Expressions must be surrounded with\n * ${{ <expr> }} and will be replaced with their evaluation result in the returned string.\n *\n * @param input String containing zero or more expression\n * @param contextProvider Context provider for evaluation\n */\nexport function replaceExpressions(\n  input: string,\n  contextProvider: ContextProvider\n): string {\n  return input.replace(expressionMarker, (_, g) => {\n    return evaluateExpression(g, contextProvider);\n  });\n}\n","import { Octokit } from \"@octokit/rest\";\nimport { YAMLException } from \"yaml-ast-parser\";\n\n//\n// Improved YAML AST types\n//\n\nexport enum Kind {\n  SCALAR = 0,\n  MAPPING = 1,\n  MAP = 2,\n  SEQ = 3,\n  ANCHOR_REF = 4,\n  INCLUDE_REF = 5,\n}\nexport interface YAMLDocument {\n  startPosition: number;\n  endPosition: number;\n  errors: YAMLException[];\n}\n\nexport interface YAMLNode extends YAMLDocument {\n  startPosition: number;\n  endPosition: number;\n  kind: Kind;\n  anchorId?: string;\n  valueObject?: any;\n  parent: YAMLNode;\n  errors: YAMLException[];\n  value?: any;\n  key?: any;\n  mappings?: any;\n}\n\nexport interface YAMLAnchorReference extends YAMLNode {\n  kind: Kind.ANCHOR_REF;\n\n  referencesAnchor: string;\n  value: YAMLNode;\n}\n\nexport interface YAMLScalar extends YAMLNode {\n  kind: Kind.SCALAR;\n\n  value: string;\n  doubleQuoted?: boolean;\n  singleQuoted?: boolean;\n  plainScalar?: boolean;\n  rawValue: string;\n}\n\nexport interface YAMLMapping extends YAMLNode {\n  kind: Kind.MAPPING;\n\n  key: YAMLScalar;\n  value: YAMLNode;\n}\n\nexport interface YAMLSequence extends YAMLNode {\n  kind: Kind.SEQ;\n\n  items: YAMLNode[];\n}\n\nexport interface YAMLMap extends YAMLNode {\n  kind: Kind.MAP;\n\n  mappings: YAMLMapping[];\n}\n\nexport type YNode = YAMLMap | YAMLMapping | YAMLSequence | YAMLScalar;\n\n//\n// Custom types\n//\n\nexport interface Context {\n  /** Octokit client to use for dynamic auto completion */\n  client: Octokit;\n\n  /** Repository owner */\n  owner: string;\n\n  /** Repository name */\n  repository: string;\n\n  /** Is the repository owned by an organization? */\n  ownerIsOrg?: boolean;\n\n  /**\n   * Are org features enabled, i.e., is the client authenticated for making org calls, which\n   * means does it have the admin:org scope\n   */\n  orgFeaturesEnabled?: boolean;\n\n  /**\n   * Dynamic auto-completion/validations are cached for a certain time to speed up successive\n   * operations.\n   *\n   * Setting this to a low number will greatly increase the number of API calls and duration\n   * parsing/validation/auto-completion will take.\n   *\n   * @default 10 * 60 * 1000 = 10 minutes\n   **/\n  timeToCacheResponsesInMS?: number;\n}\n\nexport type Position = [number, number];\n\nexport interface CompletionOption {\n  /** Auto complete value */\n  value: string;\n\n  /** Optional description for this completion option */\n  description?: string;\n}\n\nexport enum DiagnosticKind {\n  Error,\n  Warning,\n  Information,\n}\n\nexport interface Diagnostic {\n  /** Defaults to error */\n  kind?: DiagnosticKind;\n\n  message: string;\n\n  pos: Position;\n}\n\nexport interface Hover {\n  /** Description for the hover, might be formatted with markdown */\n  description: string;\n}\n","import { Kind, Position, YAMLNode, YNode } from \"../../types\";\n\nimport { PropertyPath } from \"../utils/path\";\n\nexport const DUMMY_KEY = \"dummy\";\n\nexport function inPos(position: Position, pos: number): boolean {\n  return position[0] <= pos && pos <= position[1];\n}\n\nexport function findNode(node: YAMLNode, pos: number): YAMLNode | null {\n  if (!inPos([node.startPosition, node.endPosition], pos)) {\n    return null;\n  }\n\n  const n: YNode = node as YNode;\n  switch (n.kind) {\n    case Kind.MAP: {\n      for (const mapping of n.mappings) {\n        if (inPos([mapping.startPosition, mapping.endPosition], pos)) {\n          return findNode(mapping, pos);\n        }\n      }\n\n      break;\n    }\n\n    case Kind.MAPPING: {\n      // If the position is within the value, return that, otherwise the mapping node\n      const r = node.value && findNode(n.value, pos);\n      if (r) {\n        return r;\n      }\n\n      // TODO: What to do here.. don't remember :)\n      if (node.key) {\n        if (\n          inPos([n.key.startPosition, n.key.endPosition], pos) ||\n          node.key.value === DUMMY_KEY\n        ) {\n          return node.parent;\n        }\n      }\n\n      break;\n    }\n\n    case Kind.SEQ: {\n      for (const item of n.items) {\n        if (typeof item !== \"object\") {\n          return n;\n        }\n\n        if (item === null) {\n          // New item like `- |` is inserted\n          return n;\n        }\n\n        if (inPos([item.startPosition, item.endPosition], pos)) {\n          const itemNode = findNode(item, pos);\n\n          // TODO: CS: Try to get rid of this logic\n          // if (itemNode.parent === n && itemNode.kind === Kind.SCALAR) {\n          //   // If the child is a plain value, return the sequence node\n          //   // return n;\n          // }\n\n          // Otherwise return the found node\n          return itemNode;\n        }\n      }\n\n      break;\n    }\n\n    case Kind.SCALAR: {\n      if (n.value && n.value === DUMMY_KEY) {\n        return n.parent;\n      }\n\n      return n;\n    }\n\n    default:\n      throw new Error(\"unknown\");\n  }\n\n  return node;\n}\n\nexport function getPathFromNode(node: YNode | null): PropertyPath {\n  // Build up node path\n  const nodePath: YNode[] = [];\n  let x = node;\n  while (x) {\n    // Add in reverse\n    nodePath.unshift(x);\n    x = x.parent as YNode;\n  }\n\n  const path: PropertyPath = [\"$\"];\n  while (nodePath.length) {\n    const x = nodePath.shift();\n\n    switch (x?.kind) {\n      case Kind.MAPPING:\n        if (x.key) {\n          path.push(x.key.value);\n        }\n\n        if (x.value) {\n          nodePath.unshift(x.value as YNode);\n        }\n        break;\n\n      case Kind.SEQ:\n        // Check next node to determine index\n        if (nodePath.length && x.items) {\n          const idx = x.items.indexOf(nodePath[0]);\n          if (idx !== -1) {\n            // Previous entry has to be a property. Note: this might be problematic with nested sequences,\n            // but that's not currently supported.\n            const propertyName: string = path[path.length - 1] as string;\n            path[path.length - 1] = [propertyName, idx];\n          }\n        }\n        break;\n    }\n  }\n\n  return path;\n}\n","import { Uses } from \"../workflow\";\n\nexport function parseUses(input: string): Uses {\n  if (input.indexOf(\"@\") !== -1) {\n    // Remote uses\n    const [x, ref] = input.split(\"@\");\n    const [_, owner, repository, subdirectory] = x.match(\n      /([^\\/]*)\\/([^\\/]*)\\/?(.*)?/\n    )!;\n\n    return {\n      type: \"remote\",\n      ref,\n      owner,\n      repository,\n      subdirectory,\n    };\n  } else if (input.indexOf(\"docker://\") !== -1) {\n    // TODO: Parse docker uses\n    return {\n      type: \"docker\",\n    };\n  } else {\n    // Local\n    return {\n      type: \"local\",\n    };\n  }\n}\n","import { DUMMY_KEY } from \"../parser/ast\";\nimport { Expression, Job, MatrixInvocations, Workflow } from \"../workflow\";\nimport { parseUses } from \"./uses\";\n\nfunction toArray(input: string | string[]): string[] {\n  if (Array.isArray(input)) {\n    return input;\n  }\n\n  return [input];\n}\n\nexport function normalizeWorkflow(filename: string, workflow: Workflow) {\n  // Name\n  workflow.name = workflow.name || filename;\n\n  // On\n  if (typeof workflow.on === \"string\") {\n    workflow.on = {\n      [workflow.on]: {},\n    };\n  } else if (Array.isArray(workflow.on)) {\n    workflow.on = workflow.on.reduce((o, x) => {\n      o[x] = {};\n      return o;\n    }, {});\n  }\n\n  // Jobs\n  if (!workflow.jobs) {\n    workflow.jobs = {};\n  }\n\n  for (const jobId of Object.keys(workflow.jobs).filter(\n    (x) => x !== DUMMY_KEY\n  )) {\n    normalizeJob(workflow.jobs[jobId]);\n  }\n}\n\nfunction normalizeJob(job: Job) {\n  // Strategy\n  if (job.strategy?.matrix) {\n    // TODO: Should switch to build up the workflow using the AST instead of parsing and transforming in place\n    job.strategy.matrix = normalizeMatrix(job.strategy.matrix as any);\n  }\n\n  // Steps\n  if (!Array.isArray(job.steps)) {\n    job.steps = [];\n  }\n\n  job.steps = job.steps.filter((x) => typeof x === \"object\");\n\n  for (const step of job.steps) {\n    // Uses\n    if (step && \"uses\" in step && typeof step.uses === \"string\") {\n      step.uses = parseUses(step.uses);\n    }\n  }\n\n  // Other properties\n  job.needs = job.needs && toArray(job.needs);\n  job[\"timeout-minutes\"] = job[\"timeout-minutes\"] || 360;\n}\n\nexport function normalizeMatrix(\n  matrix:\n    | {\n        // @ts-ignore\n        include?: Object[];\n        // @ts-ignore\n        exclude?: Object[];\n\n        [key: string]: (string | number | boolean)[];\n      }\n    | Expression\n): MatrixInvocations | Expression {\n  if (typeof matrix === \"string\") {\n    // Expression\n    return matrix;\n  }\n\n  const explicitMatrixKeys = Object.keys(matrix).filter(\n    (x) => x !== \"include\" && x !== \"exclude\"\n  );\n\n  const matrixValues: {\n    [inputKey: string]: (string | number | boolean)[];\n  } = {};\n  for (const explicitMatrixKey of explicitMatrixKeys) {\n    matrixValues[explicitMatrixKey] = matrix[explicitMatrixKey];\n  }\n\n  let invocations = crossProduct(matrixValues);\n\n  // Process excludes, this has to happen before the includes (see\n  // https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#example-excluding-configurations-from-a-matrix)\n  if (matrix[\"exclude\"]) {\n    // Iterate over all values, remove matching pairs\n    for (const toExclude of matrix.exclude) {\n      invocations = invocations.filter((x) => !deepEqual(x, toExclude));\n    }\n  }\n\n  if (matrix[\"include\"]) {\n    for (const toInclude of matrix.include) {\n      // Find an existing entry to extend\n      const idx = invocations.findIndex((x) => leftEqual(x, toInclude));\n      if (idx !== -1) {\n        invocations.splice(idx, 1, toInclude as any);\n      } else {\n        invocations.push(toInclude as any);\n      }\n    }\n  }\n\n  return invocations;\n}\n\nfunction leftEqual(a: Object, b: Object) {\n  const keysA = Object.keys(a);\n\n  return keysA.every((keyA) => a[keyA] === b[keyA]);\n}\n\nfunction deepEqual(a: Object, b: Object) {\n  const keysA = Object.keys(a);\n  const keysB = Object.keys(b);\n\n  return (\n    keysB.length === keysA.length && keysA.every((keyA) => a[keyA] === b[keyA])\n  );\n}\n\nexport function crossProduct(inputs: {\n  [inputKey: string]: (string | number | boolean)[];\n}): { [key: string]: string | number | boolean }[] {\n  let result: { [key: string]: string | number | boolean }[] = [];\n\n  for (const inputKey of Object.keys(inputs)) {\n    if (result.length === 0) {\n      // Add first iteration\n      result.push(\n        ...inputs[inputKey].map((x) => ({\n          [inputKey]: x,\n        }))\n      );\n    } else {\n      let newResult: { [key: string]: string | number | boolean }[] = [];\n\n      // Add to existing values\n      for (const inputValue of inputs[inputKey]) {\n        for (const r of result) {\n          newResult.push({\n            ...r,\n            [inputKey]: inputValue,\n          });\n        }\n      }\n\n      result = newResult;\n    }\n  }\n\n  return result;\n}\n","export interface ContextProvider {\n  get(\n    context:\n      | \"github\"\n      | \"env\"\n      | \"job\"\n      | \"steps\"\n      | \"runner\"\n      | \"secrets\"\n      | \"strategy\"\n      | \"matrix\"\n      | \"needs\"\n  ): Object;\n}\n\nexport const DynamicContext = {};\n","import { ContextProvider, DynamicContext } from \"./types\";\nimport { Diagnostic, Position } from \"../../types\";\nimport { ExpressionContext, ExpressionEvaluator } from \"./evaluator\";\nimport { ExpressionLexer, parser } from \"./parser\";\nimport { PropertyPath, iteratePath } from \"../utils/path\";\nimport { iterateExpressions, removeExpressionMarker } from \"./embedding\";\n\nimport { Undetermined } from \"./functions\";\n\nfunction iterateContextPath(path: PropertyPath, context: Object): any {\n  let dynamicNode = false;\n\n  const result = iteratePath(path, context, (x) => {\n    if (x === DynamicContext) {\n      dynamicNode = true;\n    }\n  });\n\n  if (dynamicNode) {\n    // We have encountered at least one DynamicContext while iterating. Dynamic contexts\n    // are built up at runtime, and we cannot reliably reason about those.\n    return Undetermined;\n  }\n\n  return result;\n}\n\nclass ExpressionValidator extends ExpressionEvaluator {\n  constructor(\n    private contextProvider: ContextProvider,\n    private errors: Diagnostic[],\n    private pos: Position\n  ) {\n    super();\n  }\n\n  protected getContextValue(contextName: string, path: PropertyPath) {\n    const ctx = this.contextProvider.get(contextName as any);\n\n    const value = ctx && iterateContextPath(path, ctx);\n    if (!ctx || (value !== Undetermined && value === undefined)) {\n      this.errors.push({\n        message: `Unknown context access: '${contextName}.${path.join(\".\")}'`,\n        pos: this.pos,\n      });\n    }\n\n    return value;\n  }\n}\n\nexport function validateExpression(\n  input: string,\n  posOffset: number,\n  diagnostics: Diagnostic[],\n  contextProvider: ContextProvider\n) {\n  const expressionPosition: Position = [posOffset, posOffset + input.length];\n\n  input = removeExpressionMarker(input);\n\n  // Check for parser errors\n  const lexResult = ExpressionLexer.tokenize(input);\n  parser.input = lexResult.tokens;\n  if (lexResult.errors.length > 0) {\n    diagnostics.push({\n      message: \"Invalid expression\",\n      pos: expressionPosition,\n    });\n\n    return;\n  }\n\n  const cst = parser.expression();\n  if (parser.errors.length > 0) {\n    diagnostics.push({\n      message: \"Invalid expression\",\n      pos: expressionPosition,\n    });\n\n    // console.log(JSON.stringify(parser.errors));\n\n    return;\n  }\n\n  try {\n    const result = new ExpressionValidator(\n      contextProvider,\n      diagnostics,\n      expressionPosition\n    ).visit(cst, { contextProvider } as ExpressionContext);\n\n    return result;\n  } catch (e) {\n    console.error(e);\n\n    diagnostics.push({\n      message: \"Error evaluating expression\",\n      pos: expressionPosition,\n    });\n  }\n}\n\nexport function validateExpressions(\n  input: string,\n  posOffset: number,\n  errors: Diagnostic[],\n  contextProvider: ContextProvider\n) {\n  iterateExpressions(input, (expr, pos) => {\n    validateExpression(expr, posOffset + pos, errors, contextProvider);\n  });\n}\n","import { PropertyPath } from \"../utils/path\";\nimport { Workflow } from \"../workflow\";\n\nexport type NodeDescMap = { [key: string]: NodeDesc };\n\ntype Desc = {\n  /** Description for this node, can contain markdown */\n  description?: string;\n\n  /**\n   * Custom value provider, used for auto-complete and validation\n   *\n   * @param desc Description for node to provide value for\n   * @param workflow Workflow if it could be parsed\n   * @param path Path in the workflow\n   */\n  customValueProvider?: CustomValueProvider;\n};\n\ntype OneOfNodeDesc = {\n  type: \"oneOf\";\n\n  oneOf: NodeDesc[];\n} & Desc;\n\nexport type MapNodeDesc = {\n  type: \"map\";\n\n  /**\n   * Map of key to Node or Node array.\n   */\n  keys?: NodeDescMap;\n\n  /**\n   * Specify a template to validate unknown keys against\n   */\n  itemDesc?: NodeDesc;\n\n  /**\n   * Should unknown keys be allowed\n   */\n  allowUnknownKeys?: boolean;\n\n  /**\n   * Required keys for the map\n   */\n  required?: string[];\n} & Desc;\n\ntype SequenceNodeDesc = {\n  type: \"sequence\";\n\n  itemDesc?: NodeDesc;\n} & Desc;\n\nexport type ValueDesc = {\n  value: string;\n  description?: string;\n} & Desc;\n\nexport type ValueNodeDesc = {\n  type: \"value\";\n\n  /** Allowed values */\n  allowedValues?: ValueDesc[];\n\n  /** If the node allows omitting ${{ }} to enter an expression */\n  isExpression?: boolean;\n\n  /**\n   * If a value can be set using an expression, this will disable checking\n   * against `allowedValues` when set\n   */\n  supportsExpression?: boolean;\n} & Desc;\n\nexport type NodeDesc =\n  | ValueNodeDesc\n  | SequenceNodeDesc\n  | MapNodeDesc\n  | OneOfNodeDesc;\n\nexport enum CustomValueValidation {\n  /** Default, no special handling */\n  None = 0,\n\n  /**\n   * Value/key must be provided\n   *\n   * This is mostly used for requiring certain keys to be provided\n   **/\n  Required = 1,\n}\n\nexport interface CustomValue {\n  value: string;\n\n  description?: string;\n\n  validation?: CustomValueValidation;\n}\n\nexport type CustomValueProvider = (\n  desc: NodeDesc,\n  workflow: Workflow | undefined,\n  path: PropertyPath\n) => Promise<CustomValue[] | undefined>;\n","import {\n  Kind,\n  YamlMap,\n  YAMLMapping,\n  YAMLNode,\n  YAMLScalar,\n} from \"yaml-ast-parser\";\nimport { Diagnostic, DiagnosticKind, Position, YNode } from \"../../types\";\nimport { evaluateExpression, replaceExpressions } from \"../expressions\";\nimport {\n  containsExpression,\n  iterateExpressions,\n} from \"../expressions/embedding\";\nimport { ContextProvider } from \"../expressions/types\";\nimport { validateExpression } from \"../expressions/validator\";\nimport { Workflow } from \"../workflow\";\nimport { getPathFromNode } from \"./ast\";\nimport { ContextProviderFactory } from \"./complete\";\nimport { CustomValue, CustomValueValidation, NodeDesc } from \"./schema\";\n\nfunction kindToString(kind: Kind): string {\n  switch (kind) {\n    case Kind.SCALAR:\n      return \"value\";\n\n    case Kind.MAPPING:\n      return \"mapping\";\n\n    case Kind.MAP:\n      return \"map\";\n\n    case Kind.SEQ:\n      return \"sequence\";\n\n    default:\n      throw new Error(\"Unexpected node kind\");\n  }\n}\n\nfunction validateExpressions(\n  input: string,\n  posOffset: number,\n  errors: Diagnostic[],\n  contextProvider: ContextProvider\n) {\n  iterateExpressions(input, (expr, pos) => {\n    validateExpression(expr, posOffset + pos, errors, contextProvider);\n  });\n}\n\nasync function validateNode(\n  node: YAMLNode,\n  nodeDesc: NodeDesc,\n  nodeToDesc: Map<YAMLNode, NodeDesc>,\n  workflow: Workflow | undefined,\n  contextProviderFactory: ContextProviderFactory,\n  diagnostics: Diagnostic[]\n): Promise<boolean> {\n  if (!node) {\n    return true;\n  }\n\n  const n = node as YNode;\n\n  const reportTypeMismatch = (expectedType: string, actualKind: Kind) => {\n    diagnostics.push({\n      pos: [n.startPosition, n.endPosition],\n      message: `Expected ${expectedType}, found ${kindToString(actualKind)}`,\n    });\n  };\n\n  switch (nodeDesc.type) {\n    case \"value\": {\n      if (n.kind !== Kind.SCALAR) {\n        reportTypeMismatch(\"value\", n.kind);\n      }\n\n      const scalarNode = node as YAMLScalar;\n\n      // Store for later lookup\n      nodeToDesc.set(scalarNode, nodeDesc);\n\n      let input = scalarNode.value;\n\n      if (nodeDesc.isExpression || containsExpression(input)) {\n        const path = getPathFromNode(n);\n\n        const contextProvider = await contextProviderFactory.get(\n          workflow,\n          path\n        );\n\n        // Validate scalar value as expression if it looks like one, or if we always expect one\n        // here.\n        validateExpressions(\n          // Use raw value here to match offsets\n          scalarNode.rawValue,\n          n.startPosition,\n          diagnostics,\n          contextProvider\n        );\n\n        if (nodeDesc.supportsExpression) {\n          input = replaceExpressions(scalarNode.rawValue, contextProvider);\n        }\n      }\n\n      // Value is set using an expression, we cannot check against allowed values\n      // In the future we might try to resolve this but for now don't do any additional checking\n      if (\n        nodeDesc.allowedValues &&\n        !nodeDesc.allowedValues.find((x) => x.value === input)\n      ) {\n        diagnostics.push({\n          pos: [scalarNode.startPosition, scalarNode.endPosition],\n          message: `'${input}' is not in the list of allowed values`,\n        });\n      } else if (nodeDesc.customValueProvider) {\n        let customValues: CustomValue[] | undefined;\n\n        try {\n          customValues = await nodeDesc.customValueProvider(\n            nodeDesc,\n            workflow,\n            getPathFromNode(n)\n          );\n        } catch (e) {\n          diagnostics.push({\n            kind: DiagnosticKind.Warning,\n            pos: [scalarNode.startPosition, scalarNode.endPosition],\n            message: `Could not retrieve values: ${e?.message}`,\n          });\n        }\n\n        if (customValues && !customValues?.find((x) => x.value === input)) {\n          diagnostics.push({\n            pos: [scalarNode.startPosition, scalarNode.endPosition],\n            message: `'${input}' is not in the list of allowed values`,\n          });\n        }\n      }\n\n      break;\n    }\n\n    case \"map\": {\n      if (n.kind !== Kind.MAP) {\n        if (n.kind === Kind.SCALAR) {\n          diagnostics.push({\n            pos: [n.startPosition, n.endPosition],\n            message: `Unknown key '${n.value}'`,\n          });\n          return false;\n        }\n\n        reportTypeMismatch(\"map\", n.kind);\n      }\n\n      const mapNode = node as YamlMap;\n      nodeToDesc.set(node, nodeDesc);\n\n      let customValues: CustomValue[] | undefined;\n      if (nodeDesc.customValueProvider) {\n        try {\n          customValues = await nodeDesc.customValueProvider(\n            nodeDesc,\n            workflow,\n            getPathFromNode(n)\n          );\n        } catch (e) {\n          diagnostics.push({\n            kind: DiagnosticKind.Warning,\n            pos: [mapNode.startPosition, mapNode.endPosition],\n            message: `Could not retrieve values: ${e?.message}`,\n          });\n        }\n      }\n\n      const seenKeys = new Map<string, YAMLMapping>();\n\n      for (const mapping of mapNode.mappings) {\n        const key = mapping.key.value;\n        seenKeys.set(key, mapping);\n\n        // Check if we know more about this key\n        const mappingDesc = nodeDesc.keys && nodeDesc.keys[key];\n        if (mappingDesc) {\n          // Validate each mapping\n\n          // Add mapping desc for later lookup (e.g., to complete keys)\n          nodeToDesc.set(mapping, mappingDesc);\n          await validateNode(\n            mapping.value,\n            mappingDesc,\n            nodeToDesc,\n            workflow,\n            contextProviderFactory,\n            diagnostics\n          );\n        } else if (nodeDesc.itemDesc) {\n          await validateNode(\n            mapping.value,\n            nodeDesc.itemDesc,\n            nodeToDesc,\n            workflow,\n            contextProviderFactory,\n            diagnostics\n          );\n        }\n      }\n\n      // Check required keys\n      if (nodeDesc.required || customValues) {\n        const requiredKeys = [\n          ...(nodeDesc.required || []),\n          ...(customValues || [])\n            .filter((x) => x.validation === CustomValueValidation.Required)\n            .map((x) => x.value),\n        ];\n\n        for (const missingKey of requiredKeys.filter(\n          (key) => !seenKeys.has(key)\n        )) {\n          let pos: Position = [mapNode.startPosition, mapNode.endPosition];\n          if (mapNode.parent && mapNode.parent.key) {\n            pos = [\n              mapNode.parent.key.startPosition,\n              mapNode.parent.key.endPosition,\n            ];\n          }\n\n          diagnostics.push({\n            pos,\n            message: `Missing required key '${missingKey}'`,\n          });\n        }\n      }\n\n      if (!nodeDesc.allowUnknownKeys && (nodeDesc.keys || customValues)) {\n        // Calculate list of allowed keys from schema and dynamic values\n        const allowedKeys = new Set<string>([\n          ...((nodeDesc.keys && Object.keys(nodeDesc.keys)) || []),\n          ...(customValues || []).map((x) => x.value),\n        ]);\n\n        // Compare allowed and seen keys\n        const unknownKeys = Array.from(seenKeys).filter(\n          ([key]) => !allowedKeys.has(key)\n        );\n        for (const [unknownKey, mappingNode] of unknownKeys) {\n          diagnostics.push({\n            pos: [mappingNode.key.startPosition, mappingNode.key.endPosition],\n            message: `Key '${unknownKey}' is not allowed`,\n          });\n        }\n      }\n\n      break;\n    }\n\n    case \"sequence\": {\n      if (n.kind !== Kind.SEQ) {\n        reportTypeMismatch(\"sequence\", n.kind);\n      } else {\n        nodeToDesc.set(node, nodeDesc);\n\n        if (nodeDesc.itemDesc) {\n          for (const item of n.items) {\n            // Record the itemdesc as the desired desc for the item. This might fail in the validateNode call,\n            // but is required for auto-complete (e.g., type doesn't match yet, but we still want to be able to\n            // suggest values)\n            nodeToDesc.set(item, nodeDesc.itemDesc);\n\n            await validateNode(\n              item,\n              nodeDesc.itemDesc,\n              nodeToDesc,\n              workflow,\n              contextProviderFactory,\n              diagnostics\n            );\n          }\n        }\n      }\n\n      break;\n    }\n\n    case \"oneOf\": {\n      let foundMatchingNode = false;\n\n      for (const nDesc of nodeDesc.oneOf) {\n        switch (nDesc.type) {\n          case \"value\":\n            if (node.kind === Kind.SCALAR) {\n              await validateNode(\n                node,\n                nDesc,\n                nodeToDesc,\n                workflow,\n                contextProviderFactory,\n                diagnostics\n              );\n              foundMatchingNode = true;\n            }\n            break;\n\n          case \"map\":\n            if (node.kind === Kind.MAP) {\n              await validateNode(\n                node,\n                nDesc,\n                nodeToDesc,\n                workflow,\n                contextProviderFactory,\n                diagnostics\n              );\n              foundMatchingNode = true;\n            }\n            break;\n\n          case \"sequence\":\n            if (node.kind === Kind.SEQ) {\n              await validateNode(\n                node,\n                nDesc,\n                nodeToDesc,\n                workflow,\n                contextProviderFactory,\n                diagnostics\n              );\n              foundMatchingNode = true;\n            }\n            break;\n        }\n      }\n\n      if (!foundMatchingNode) {\n        diagnostics.push({\n          pos: [node.startPosition, node.endPosition],\n          message: `Did not expect '${kindToString(n.kind)}'`,\n        });\n      }\n    }\n  }\n\n  return true;\n}\n\nexport interface ValidationResult {\n  errors: Diagnostic[];\n\n  nodeToDesc: Map<YAMLNode, NodeDesc>;\n}\n\nexport async function validate(\n  root: YAMLNode,\n  schema: NodeDesc,\n  workflow: Workflow | undefined,\n  contextProviderFactory: ContextProviderFactory\n): Promise<ValidationResult> {\n  const diagnostics: Diagnostic[] = [];\n  const nodeToDesc = new Map<YAMLNode, NodeDesc>();\n  // nodeToDesc.set(null, schema);\n\n  await validateNode(\n    root,\n    schema,\n    nodeToDesc,\n    workflow,\n    contextProviderFactory,\n    diagnostics\n  );\n\n  return {\n    errors: diagnostics.map((x) => ({\n      ...x,\n      kind: x.kind || DiagnosticKind.Error,\n    })),\n    nodeToDesc,\n  };\n}\n","import { Diagnostic, DiagnosticKind, Position } from \"../../types\";\nimport { YAMLNode, safeLoad } from \"yaml-ast-parser\";\n\nimport { ContextProviderFactory } from \"./complete\";\nimport { NodeDesc } from \"./schema\";\nimport { Workflow } from \"../workflow\";\nimport { load as jsYamlLoad } from \"js-yaml\";\nimport { normalizeWorkflow } from \"../workflow/normalize\";\nimport { validate } from \"./validator\";\n\nexport interface WorkflowDocument {\n  /** Normalized workflow */\n  workflow?: Workflow;\n\n  /** Errors and warnings found during parsing */\n  diagnostics: Diagnostic[];\n\n  /** Workflow AST */\n  workflowST: YAMLNode;\n\n  /** Mapping of AST nodes to mapped schema descriptions */\n  nodeToDesc: Map<YAMLNode, NodeDesc>;\n}\n\nexport async function parse(\n  filename: string,\n  input: string,\n  schema: NodeDesc,\n  contextProviderFactory: ContextProviderFactory\n): Promise<WorkflowDocument> {\n  const diagnostics: Diagnostic[] = [];\n\n  // First, parse workflow using js-yaml\n  let workflow: Workflow | undefined;\n\n  try {\n    workflow = jsYamlLoad(input);\n  } catch {\n    // Ignore error here, will be reported below\n  }\n\n  // Normalize the resulting JSON object, e.g., make sure options that can be specified in\n  // multiple ways in the YAML (scalar/sequence/map) are always represented in the same way.\n  if (typeof workflow === \"object\") {\n    normalizeWorkflow(filename, workflow);\n  } else {\n    // Workflow couldn't be parsed correctly, set to undefined since we cannot reason about it anyway\n    workflow = undefined;\n  }\n\n  // Second, parse again using yaml-ast-parser. The resulting AST is used for validation, auto-completion\n  // and other evaluations.\n  //\n  // Long term it's obviously wasteful to parse the input twice and the workflow JSON should be derived\n  // from the AST, but for now this is the easiest option.\n  const yamlRoot = safeLoad(input);\n  if (yamlRoot) {\n    if (yamlRoot.errors.length > 0) {\n      diagnostics.push(\n        ...yamlRoot.errors.map((e) => ({\n          kind: e.isWarning ? DiagnosticKind.Warning : DiagnosticKind.Error,\n          message: e.reason,\n          pos: [e.mark.position, e.mark.position + 1] as Position,\n        }))\n      );\n    }\n  } else {\n    diagnostics.push({\n      message: \"Could not parse input\",\n      pos: [0, input?.length || 0],\n      kind: DiagnosticKind.Error,\n    });\n  }\n\n  const validationResult = await validate(\n    yamlRoot,\n    schema,\n    workflow,\n    contextProviderFactory\n  );\n  diagnostics.push(...validationResult.errors);\n\n  return {\n    workflow,\n    workflowST: yamlRoot,\n    nodeToDesc: validationResult.nodeToDesc,\n    diagnostics,\n  };\n}\n","import { CompletionOption, Kind, YNode } from \"../../types\";\nimport { completeExpression, inExpression } from \"../expressions/completion\";\nimport { expressionMarker, iterateExpressions } from \"../expressions/embedding\";\nimport { DUMMY_KEY, findNode, getPathFromNode } from \"./ast\";\nimport { parse, WorkflowDocument } from \"./parser\";\nimport { CustomValue, MapNodeDesc, NodeDesc } from \"./schema\";\n\nimport { YAMLNode } from \"yaml-ast-parser\";\nimport { ContextProvider } from \"../expressions/types\";\nimport { PropertyPath } from \"../utils/path\";\nimport { Workflow } from \"../workflow\";\n\nexport interface ContextProviderFactory {\n  get(\n    workflow: Workflow | undefined,\n    path: PropertyPath\n  ): Promise<ContextProvider>;\n}\n\nfunction filterAndSortCompletionOptions(\n  partialInput: string,\n  options: CompletionOption[],\n  existingValues?: Set<string>\n) {\n  options = options\n    .filter((x) => !existingValues || !existingValues.has(x.value))\n    .filter((x) => !partialInput || x.value.startsWith(partialInput));\n  options.sort((a, b) => a.value.localeCompare(b.value));\n  return options;\n}\n\nasync function completeMapKeys(\n  doc: WorkflowDocument,\n  node: YNode | null,\n  mapDesc: MapNodeDesc,\n  line: string,\n  partialInput: string\n): Promise<CompletionOption[]> {\n  const existingKeys = new Set<string>(\n    node?.mappings?.filter((x) => !!x.key).map((x) => x.key.value) || []\n  );\n\n  let options: CompletionOption[] = [];\n\n  if (mapDesc.customValueProvider) {\n    try {\n      const customValues = await mapDesc.customValueProvider(\n        mapDesc,\n        doc.workflow,\n        getPathFromNode(node)\n      );\n      if (customValues) {\n        options.push(...customValues);\n      }\n    } catch (e) {\n      // Log, but ignore custom values in case of error\n      console.error(e);\n    }\n  }\n\n  if (mapDesc.keys) {\n    options.push(\n      ...Object.keys(mapDesc.keys).map((key) => ({\n        value: key,\n        description: mapDesc.keys![key].description,\n      }))\n    );\n  }\n\n  return filterAndSortCompletionOptions(partialInput, options, existingKeys);\n}\n\nasync function doComplete(\n  node: YNode,\n  desc: NodeDesc,\n  input: string,\n  partialInput: string,\n  pos: number,\n  doc: WorkflowDocument,\n  contextProviderFactory: ContextProviderFactory\n): Promise<CompletionOption[]> {\n  if (!node) {\n    console.error(desc);\n    throw new Error(\"no node\");\n  }\n\n  // console.log(desc);\n\n  switch (desc.type) {\n    case \"value\": {\n      let searchInput = node.value || \"\";\n      searchInput = searchInput !== DUMMY_KEY ? searchInput : \"\";\n\n      const parent = node.parent as YNode;\n\n      // Are we in a sequence?\n      let existingItems: YAMLNode[] = [];\n      if (parent.kind === Kind.SEQ) {\n        existingItems = parent.items;\n      } else if (node.kind === Kind.SEQ) {\n        // Is the current node a sequence? Could happen if we are trying to auto-complete and have an empty input\n        existingItems = node.items;\n      }\n      const existingValues = new Set<string>(\n        existingItems\n          .filter((x) => !!x && x.kind === Kind.SCALAR)\n          .map((x) => x.value)\n      );\n\n      // Does the value node has auto-complete information?\n      if (desc.customValueProvider) {\n        let customValues: CustomValue[] | undefined;\n\n        try {\n          customValues = await desc.customValueProvider(\n            desc,\n            doc.workflow,\n            getPathFromNode(node)\n          );\n        } catch (e) {\n          // Log, but ignore custom values in case of error\n          console.error(e);\n        }\n\n        return filterAndSortCompletionOptions(\n          searchInput,\n          customValues || [],\n          new Set<string>(existingValues)\n        );\n      } else if (desc.allowedValues) {\n        return filterAndSortCompletionOptions(\n          searchInput,\n          desc.allowedValues,\n          existingValues\n        );\n      } else if (\n        desc.isExpression ||\n        inExpression(node.value, pos - node.startPosition)\n      ) {\n        return expressionComplete(\n          node,\n          pos,\n          getPathFromNode(node),\n          doc.workflow!,\n          contextProviderFactory,\n          desc.isExpression\n        );\n      }\n\n      break;\n    }\n\n    case \"sequence\": {\n      if (desc.itemDesc) {\n        return doComplete(\n          node,\n          desc.itemDesc,\n          input,\n          partialInput,\n          pos,\n          doc,\n          contextProviderFactory\n        );\n      }\n\n      break;\n    }\n\n    case \"map\": {\n      // Check what to complete\n      if (node.kind === Kind.MAP) {\n        // We should be in a mapping, try to find it\n        const mapping = findNode(doc.workflowST, pos) as YNode;\n        if (mapping.kind === Kind.MAPPING) {\n          const mapDesc = doc.nodeToDesc.get(mapping.parent) as MapNodeDesc;\n          if (mapDesc.type !== \"map\") {\n            throw new Error(\"Could not find map node\");\n          }\n\n          const key = mapping.key.value;\n          return doComplete(\n            mapping,\n            mapDesc.keys![key],\n            input,\n            partialInput,\n            pos,\n            doc,\n            contextProviderFactory\n          );\n        }\n      }\n\n      return completeMapKeys(doc, node, desc, input, partialInput);\n    }\n\n    case \"oneOf\": {\n      const validTypes = getValidOneOfTypes(node, pos, input);\n\n      const result: CompletionOption[] = [];\n\n      for (const one of desc.oneOf.filter((one) => validTypes.has(one.type))) {\n        const c = await doComplete(\n          node,\n          one,\n          input,\n          partialInput,\n          pos,\n          doc,\n          contextProviderFactory\n        );\n        result.push(...c);\n      }\n\n      return result;\n    }\n  }\n\n  throw new Error(`Unknown node desc ${desc.type}`);\n}\n\nfunction getValidOneOfTypes(node: YNode, pos: number, input: string) {\n  const validTypes = new Set<NodeDesc[\"type\"]>();\n\n  switch (node.kind) {\n    case Kind.SCALAR: {\n      validTypes.add(\"value\");\n      break;\n    }\n\n    // case Kind.MAP:\n    //   break;\n\n    case Kind.MAPPING: {\n      const [line] = getCurrentLine(pos, input);\n      if (line.indexOf(\":\") >= 0) {\n        validTypes.add(\"value\");\n      }\n      break;\n    }\n\n    case Kind.SEQ: {\n      validTypes.add(\"sequence\");\n      break;\n    }\n  }\n\n  return validTypes;\n}\n\nfunction getCurrentLine(\n  pos: number,\n  input: string,\n  trim = true\n): [string, number] {\n  let s = pos;\n  while (s > 0 && input[s] !== \"\\n\") {\n    --s;\n\n    if (input[s] === \"\\n\") {\n      ++s;\n      break;\n    }\n  }\n\n  const line = input.substring(s, pos + 1);\n  return [trim ? line.trim() : line, pos - s];\n}\n\nasync function expressionComplete(\n  node: YNode,\n  pos: number,\n  path: PropertyPath,\n  workflow: Workflow,\n  contextProviderFactory: ContextProviderFactory,\n  isExpression = false\n): Promise<CompletionOption[]> {\n  const input = `${node.value}`;\n  const inputPos = pos - node.startPosition;\n\n  // Determine expression\n  let expression = input;\n  let expressionPos = inputPos;\n  if (!isExpression) {\n    let expressionFound = false;\n    iterateExpressions(input, (exp, start, length) => {\n      if (start <= inputPos && inputPos <= start + length) {\n        expressionFound = true;\n        expression = exp;\n        expressionPos = inputPos - start;\n      }\n    });\n\n    // Check for partial expression\n    if (!expressionFound) {\n      const startPos = input.indexOf(\"${{\");\n      if (startPos === -1) {\n        return [];\n      }\n\n      expression = input.substr(startPos + 3);\n      expressionPos = inputPos - startPos - 3;\n    }\n  }\n\n  expression = expression.replace(expressionMarker, \"$1\");\n\n  const contextProvider = await contextProviderFactory.get(workflow, path);\n  return completeExpression(expression, expressionPos, contextProvider);\n}\n\nfunction _transform(input: string, pos: number): [string, number, string] {\n  // TODO: Optimize this...\n  const lines = input.split(\"\\n\");\n  const lineNo = input\n    .substring(0, pos)\n    .split(\"\")\n    .filter((x) => x === \"\\n\").length;\n  const linePos =\n    pos - lines.slice(0, lineNo).reduce((p, l) => p + l.length + 1, 0);\n  const line = lines[lineNo];\n\n  let partialInput = line.trim();\n  // Special case for Actions, if this line contains an expression marker, do _not_ transform. This is\n  // an ugly fix for auto-completion in multi-line YAML strings. At this point in the process, we cannot\n  // determine if a line is in such a multi-line string.\n  if (partialInput.indexOf(\"${{\") === -1) {\n    const colon = line.indexOf(\":\");\n    if (colon === -1) {\n      const trimmedLine = line.trim();\n      if (trimmedLine === \"\" || trimmedLine === \"-\") {\n        // Node in sequence or empty line\n        let spacer = \"\";\n        if (trimmedLine === \"-\" && !line.endsWith(\" \")) {\n          spacer = \" \";\n          pos++;\n        }\n\n        lines[lineNo] =\n          line.substring(0, linePos) +\n          spacer +\n          DUMMY_KEY +\n          (trimmedLine === \"-\" ? \"\" : \":\") +\n          line.substring(linePos);\n\n        // Adjust pos by one to prevent a sequence node being marked as active\n        pos++;\n      } else if (!trimmedLine.startsWith(\"-\")) {\n        // Add `:` to end of line\n        lines[lineNo] = line + \":\";\n      }\n\n      if (trimmedLine.startsWith(\"-\")) {\n        partialInput = trimmedLine\n          .substring(trimmedLine.indexOf(\"-\") + 1)\n          .trim();\n      }\n    } else {\n      partialInput = (\n        pos > colon ? line.substring(colon + 1) : line.substring(0, colon)\n      ).trim();\n      pos = pos - 1;\n    }\n  }\n  // console.log(`partialInput '${partialInput}'`);\n  return [lines.join(\"\\n\"), pos, partialInput];\n}\n\nexport async function complete(\n  filename: string,\n  input: string,\n  pos: number,\n  schema: NodeDesc,\n  contextProviderFactory: ContextProviderFactory\n): Promise<CompletionOption[]> {\n  // Fix the input to work around YAML parsing issues\n  const [newInput, newPos, partialInput] = _transform(input, pos);\n\n  // Parse with fixed text\n  const doc = await parse(filename, newInput, schema, contextProviderFactory);\n  if (!doc.workflow) {\n    return [];\n  }\n\n  const node = findNode(doc.workflowST, newPos) as YNode;\n  const desc = doc.nodeToDesc.get(node);\n  if (desc) {\n    let completionOptions = await doComplete(\n      node,\n      desc,\n      input,\n      partialInput,\n      newPos,\n      doc,\n      contextProviderFactory\n    );\n    completionOptions = completionOptions || [];\n    completionOptions.sort((a, b) => a.value.localeCompare(b.value));\n    return completionOptions;\n  }\n\n  // No desc found, check if we are in a scalar node with an expression?\n  if (node.kind === Kind.SCALAR) {\n    return expressionComplete(\n      node,\n      pos,\n      getPathFromNode(node),\n      doc.workflow,\n      contextProviderFactory\n    );\n  }\n\n  throw new Error(\"Could not find schema for node\");\n}\n","import { tokenMatcher } from \"chevrotain\";\nimport { CompletionOption } from \"../../types\";\nimport { iteratePath, PropertyPath } from \"../utils/path\";\nimport { getFunctionDescription } from \"./functions\";\nimport {\n  Comma,\n  Context,\n  ContextMember,\n  defaultRule,\n  Dot,\n  ExpressionLexer,\n  Function,\n  parser,\n  RParens,\n  RSquare,\n} from \"./parser\";\nimport { ContextProvider } from \"./types\";\n\nexport function inExpression(input: string, pos: number) {\n  return input.substring(0, pos).indexOf(\"${{\") !== -1;\n}\n\nexport async function completeExpression(\n  input: string,\n  pos: number,\n  contextProvider: ContextProvider\n): Promise<CompletionOption[]> {\n  input = input.substring(0, pos + 1);\n  // console.log(input);\n\n  const lexResult = ExpressionLexer.tokenize(input);\n  if (lexResult.errors.length > 0) {\n    return [];\n  }\n\n  let partialTokenVector = lexResult.tokens;\n  if (!partialTokenVector || partialTokenVector.length === 0) {\n    // Nothing to suggest in this case, abort\n    return [];\n  }\n\n  let lastInputToken = partialTokenVector[partialTokenVector.length - 1];\n  let tokenIdx = 1;\n  while (\n    tokenIdx < partialTokenVector.length &&\n    (tokenMatcher(lastInputToken, RParens) ||\n      tokenMatcher(lastInputToken, RSquare) ||\n      tokenMatcher(lastInputToken, Comma))\n  ) {\n    ++tokenIdx;\n    lastInputToken = partialTokenVector[partialTokenVector.length - tokenIdx];\n  }\n\n  // Check if we are auto-completing a context access\n  if (\n    tokenMatcher(lastInputToken, ContextMember) ||\n    (tokenMatcher(lastInputToken, Dot) &&\n      (tokenMatcher(\n        partialTokenVector[partialTokenVector.length - (tokenIdx + 1)],\n        Context\n      ) ||\n        tokenMatcher(\n          partialTokenVector[partialTokenVector.length - (tokenIdx + 1)],\n          ContextMember\n        )))\n  ) {\n    // Determine previous context\n    const searchTerm = tokenMatcher(lastInputToken, Dot)\n      ? \"\"\n      : lastInputToken.image;\n\n    // Get context access path\n    let contextName: string | undefined;\n    let path: PropertyPath = [];\n    for (let i = partialTokenVector.length - (tokenIdx + 1); i >= 0; --i) {\n      if (tokenMatcher(partialTokenVector[i], Dot)) {\n        // Ignore .\n      } else {\n        if (tokenMatcher(partialTokenVector[i], ContextMember)) {\n          path.push(partialTokenVector[i].image);\n        } else if (tokenMatcher(partialTokenVector[i], Context)) {\n          contextName = partialTokenVector[i].image;\n        } else {\n          break;\n        }\n      }\n    }\n\n    // We iterate over the token vector backwards, so reverse the path for the\n    // actual context access\n    path = path.reverse();\n\n    if (contextName) {\n      const context = contextProvider.get(contextName as any);\n      const obj = iteratePath(\n        path[path.length - 1] === searchTerm\n          ? path.slice(0, path.length - 1)\n          : path,\n        context\n      );\n      const options = Object.keys(obj).map((x) => ({ value: x }));\n      options.sort((a, b) => a.value.localeCompare(b.value));\n      return options.filter(\n        (x) =>\n          !searchTerm ||\n          (x.value.startsWith(searchTerm) && x.value !== searchTerm)\n      );\n    }\n  }\n\n  // Check for auto-completing a context or a function\n  if (lastInputToken !== undefined) {\n    partialTokenVector = partialTokenVector.slice(0, -1);\n    const syntacticSuggestions = parser.computeContentAssist(\n      defaultRule,\n      partialTokenVector\n    );\n\n    const searchTerm = lastInputToken.image;\n    return syntacticSuggestions\n      .filter((x) => {\n        return (\n          Function.categoryMatchesMap?.[x.nextTokenType.tokenTypeIdx!] ||\n          Context.categoryMatchesMap?.[x.nextTokenType.tokenTypeIdx!]\n        );\n      })\n      .map((x) => (x.nextTokenType.PATTERN as RegExp).source)\n      .filter(\n        (x) =>\n          !searchTerm || x.toLowerCase().startsWith(searchTerm.toLowerCase())\n      )\n      .map((x) => ({\n        value: x,\n        description: getFunctionDescription(x),\n      }));\n  }\n\n  return [];\n}\n","import { Hover, Kind, YNode } from \"../../types\";\nimport { findNode, getPathFromNode, inPos } from \"./ast\";\n\nimport { ContextProviderFactory } from \"./complete\";\nimport { NodeDesc } from \"./schema\";\nimport { Workflow } from \"../workflow\";\nimport { containsExpression } from \"../expressions/embedding\";\nimport { parse } from \"./parser\";\nimport { replaceExpressions } from \"../expressions\";\n\nasync function doHover(\n  node: YNode,\n  desc: NodeDesc,\n  pos: number,\n  workflow: Workflow | undefined,\n  contextProviderFactory: ContextProviderFactory\n): Promise<Hover | undefined> {\n  switch (desc.type) {\n    case \"value\": {\n      // Expressions\n      if (node.kind === Kind.SCALAR && containsExpression(node.value)) {\n        const result = replaceExpressions(\n          node.value,\n          await contextProviderFactory.get(workflow, getPathFromNode(node))\n        );\n        if (result !== undefined) {\n          return {\n            description: `Evaluates to: \\`${result}\\``,\n          };\n        }\n      }\n\n      // Allowed values\n      if (desc.allowedValues) {\n        const allowedValue = desc.allowedValues.find((x) => node.value);\n        if (allowedValue && allowedValue.description) {\n          return {\n            description: allowedValue.description,\n          };\n        }\n      }\n\n      break;\n    }\n\n    case \"sequence\": {\n      if (node.kind !== Kind.SEQ) {\n        if (desc.itemDesc) {\n          return doHover(\n            node,\n            desc.itemDesc,\n            pos,\n            workflow,\n            contextProviderFactory\n          );\n        }\n      }\n\n      break;\n    }\n\n    case \"map\": {\n      if (node.kind === Kind.MAP) {\n        const mapping = node.mappings?.find((m) =>\n          inPos([m.startPosition, m.endPosition], pos)\n        );\n        if (mapping) {\n          const key = mapping.key?.value;\n          if (key) {\n            // We're hovering on a key\n\n            // Key is in schema\n            if (desc.keys?.[key]?.description) {\n              return {\n                description: desc.keys![key].description || \"\",\n              };\n            }\n\n            if (desc.customValueProvider) {\n              try {\n                const customValues = await desc.customValueProvider(\n                  desc,\n                  workflow,\n                  getPathFromNode(node)\n                );\n                const matchingValue = customValues?.find(\n                  (x) => x.value === key\n                );\n                if (matchingValue?.description) {\n                  return {\n                    description: matchingValue.description,\n                  };\n                }\n              } catch (e) {\n                // Log, but ignore custom values in case of error\n                console.error(e);\n              }\n            }\n          }\n        }\n      }\n      break;\n    }\n  }\n\n  if (desc.description) {\n    return {\n      description: desc.description,\n    };\n  }\n}\n\nexport async function hover(\n  filename: string,\n  input: string,\n  pos: number,\n  schema: NodeDesc,\n  contextProviderFactory: ContextProviderFactory\n): Promise<Hover | undefined> {\n  const doc = await parse(filename, input, schema, contextProviderFactory);\n\n  const node = findNode(doc.workflowST, pos) as YNode;\n  const desc = doc.nodeToDesc.get(node);\n  if (desc) {\n    return doHover(node, desc, pos, doc.workflow, contextProviderFactory);\n  }\n}\n","// From https://stackoverflow.com/a/34749873/561159\n\n/**\n * Simple object check.\n * @param item\n * @returns {boolean}\n */\nexport function isObject(item) {\n  return item && typeof item === \"object\" && !Array.isArray(item);\n}\n\n/**\n * Deep merge two objects.\n * @param target\n * @param ...sources\n */\nexport function mergeDeep<Q extends {}, T = any>(target: Q, ...sources: T[]) {\n  if (!sources.length) return target;\n  const source = sources.shift();\n\n  if (isObject(target) && isObject(source)) {\n    for (const key in source) {\n      if (isObject(source[key])) {\n        if (!target[key as string]) Object.assign(target, { [key]: {} });\n        mergeDeep(target[key as string], source[key]);\n      } else {\n        Object.assign(target, { [key]: source[key] });\n      }\n    }\n  }\n\n  return mergeDeep(target, ...sources);\n}\n","import check_run from \"../../events/check_run.json\";\nimport check_suite from \"../../events/check_suite.json\";\nimport commit_comment from \"../../events/commit_comment.json\";\nimport content_reference from \"../../events/content_reference.json\";\nimport create from \"../../events/create.json\";\nimport deletePayload from \"../../events/delete.json\";\nimport deploy_key from \"../../events/deploy_key.json\";\nimport deployment from \"../../events/deployment.json\";\nimport deployment_status from \"../../events/deployment_status.json\";\nimport fork from \"../../events/fork.json\";\nimport github_app_authorization from \"../../events/github_app_authorization.json\";\nimport gollum from \"../../events/gollum.json\";\nimport installation from \"../../events/installation.json\";\nimport installation_repositories from \"../../events/installation_repositories.json\";\nimport issue_comment from \"../../events/issue_comment.json\";\nimport issues from \"../../events/issues.json\";\nimport label from \"../../events/label.json\";\nimport marketplace_purchase from \"../../events/marketplace_purchase.json\";\nimport member from \"../../events/member.json\";\nimport membership from \"../../events/membership.json\";\nimport { mergeDeep } from \"../utils/deepMerge\";\nimport meta from \"../../events/meta.json\";\nimport milestone from \"../../events/milestone.json\";\nimport org_block from \"../../events/org_block.json\";\nimport organization from \"../../events/organization.json\";\nimport packagePayload from \"../../events/package.json\";\nimport page_build from \"../../events/page_build.json\";\nimport ping from \"../../events/ping.json\";\nimport project from \"../../events/project.json\";\nimport project_card from \"../../events/project_card.json\";\nimport project_column from \"../../events/project_column.json\";\nimport publicPayload from \"../../events/public.json\";\nimport pull_request from \"../../events/pull_request.json\";\nimport pull_request_review from \"../../events/pull_request_review.json\";\nimport pull_request_review_comment from \"../../events/pull_request_review_comment.json\";\nimport push from \"../../events/push.json\";\nimport release from \"../../events/release.json\";\nimport repository from \"../../events/repository.json\";\nimport repository_dispatch from \"../../events/repository_dispatch.json\";\nimport repository_import from \"../../events/repository_import.json\";\nimport repository_vulnerability_alert from \"../../events/repository_vulnerability_alert.json\";\nimport security_advisory from \"../../events/security_advisory.json\";\nimport sponsorship from \"../../events/sponsorship.json\";\nimport star from \"../../events/star.json\";\nimport status from \"../../events/status.json\";\nimport team from \"../../events/team.json\";\nimport team_add from \"../../events/team_add.json\";\nimport watch from \"../../events/watch.json\";\nimport workflow_dispatch from \"../../events/workflow_dispatch.json\";\nimport workflow_run from \"../../events/workflow_run.json\";\n\nconst eventPayloads = {\n  check_run,\n  check_suite,\n  commit_comment,\n  content_reference,\n  create,\n  delete: deletePayload,\n  deploy_key,\n  deployment,\n  deployment_status,\n  fork,\n  github_app_authorization,\n  gollum,\n  installation,\n  installation_repositories,\n  issue_comment,\n  issues,\n  label,\n  marketplace_purchase,\n  member,\n  membership,\n  meta,\n  milestone,\n  org_block,\n  organization,\n  package: packagePayload,\n  page_build,\n  ping,\n  project,\n  project_card,\n  project_column,\n  public: publicPayload,\n  pull_request,\n  pull_request_review,\n  pull_request_review_comment,\n  pull_request_target: pull_request,\n  push,\n  release,\n  repository,\n  repository_dispatch,\n  repository_import,\n  repository_vulnerability_alert,\n  security_advisory,\n  sponsorship,\n  star,\n  status,\n  team,\n  team_add,\n  watch,\n  workflow_dispatch,\n  workflow_run,\n};\n\nexport function getEventPayload(events: string[]) {\n  const payloads = events.map((event) => eventPayloads[event]);\n  return mergeDeep({}, ...payloads);\n}\n","import { getEventPayload } from \"../events/eventPayload\";\nimport { replaceExpressions } from \"../expressions\";\nimport { containsExpression } from \"../expressions/embedding\";\nimport { Undetermined } from \"../expressions/functions\";\nimport { ContextProvider, DynamicContext } from \"../expressions/types\";\nimport { mergeDeep } from \"../utils/deepMerge\";\nimport { iteratePath, PropertyPath } from \"../utils/path\";\nimport { Job, Step, Workflow } from \"../workflow\";\n\nfunction getEvent(workflow: Workflow) {\n  if (workflow && workflow.on) {\n    const events = Object.keys(workflow.on);\n    const eventPayload = getEventPayload(events);\n\n    // Add dynamic properties\n    if (workflow?.on.workflow_dispatch) {\n      eventPayload[\"inputs\"] = {};\n\n      for (const inputName of Object.keys(\n        workflow.on.workflow_dispatch.inputs || {}\n      )) {\n        eventPayload[\"inputs\"][inputName] =\n          workflow.on.workflow_dispatch.inputs![inputName]?.default ||\n          \"<provided input>\";\n      }\n    }\n\n    return eventPayload;\n  }\n\n  // Default to push, since it's one of the most common payloads\n  return getEventPayload([\"push\"]);\n}\n\nfunction getJob(workflow: Workflow, path: PropertyPath): Job | undefined {\n  const jobsIdx = path.indexOf(\"jobs\");\n  if (jobsIdx === -1) {\n    return;\n  } else if (jobsIdx >= path.length - 2) {\n    return;\n  }\n\n  // [$, jobs, build, [steps, 0]]\n  return iteratePath(path.slice(0, jobsIdx + 2), workflow) as Job;\n}\n\nexport class EditContextProvider implements ContextProvider {\n  constructor(\n    private workflow: Workflow,\n    private path: PropertyPath,\n    private secrets: string[] | typeof DynamicContext\n  ) {\n  }\n\n  get(\n    context:\n      | \"github\"\n      | \"env\"\n      | \"job\"\n      | \"steps\"\n      | \"runner\"\n      | \"secrets\"\n      | \"strategy\"\n      | \"matrix\"\n      | \"needs\"\n  ): Object {\n    switch (context) {\n      case \"github\":\n        return {\n          event_name:\n            (this.workflow?.on && Object.keys(this.workflow.on)[0]) || \"push\",\n          event: getEvent(this.workflow),\n          workflow: this.workflow?.name || \"workflow.yaml\",\n          token: \"***\",\n          job: \"dump_contexts_to_log\",\n          ref: \"refs/heads/my_branch\",\n          sha: \"c27d339ee6075c1f744c5d4b200f7901aad2c369\",\n          repository: \"octocat/hello-world\",\n          repository_owner: \"octocat\",\n          repositoryUrl: \"git://github.com/octocat/hello-world.git\",\n          run_id: \"1536140711\",\n          run_number: \"314\",\n          retention_days: \"90\",\n          run_attempt: \"1\",\n          actor: \"octocat\",\n          head_ref: \"\",\n          base_ref: \"\",\n          server_url: \"https://github.com\",\n          api_url: \"https://api.github.com\",\n          graphql_url: \"https://api.github.com/graphql\",\n          ref_name: \"my_branch\",\n          ref_protected: false,\n          ref_type: \"branch\",\n          secret_source: \"Actions\",\n          workspace: \"/home/runner/work/hello-world/hello-world\",\n          action: \"github_step\",\n          event_path: \"/home/runner/work/_temp/_github_workflow/event.json\",\n          action_repository: \"\",\n          action_ref: \"\",\n          path: \"/home/runner/work/_temp/_runner_file_commands/add_path_b037e7b5-1c88-48e2-bf78-eaaab5e02602\",\n          env: \"/home/runner/work/_temp/_runner_file_commands/set_env_b037e7b5-1c88-48e2-bf78-eaaab5e02602\",\n        };\n\n      case \"env\":\n        let env = {};\n\n        if (this.workflow) {\n          iteratePath(this.path, this.workflow, (x) => {\n            if (x[\"env\"]) {\n              const newEnv = {\n                ...x[\"env\"],\n              };\n\n              for (const key of Object.keys(newEnv)) {\n                const value = newEnv[key];\n                if (containsExpression(value)) {\n                  try {\n                    newEnv[key] = replaceExpressions(value, {\n                      get: (context) => {\n                        if (context === \"env\") {\n                          return env;\n                        }\n\n                        return this.get(context);\n                      },\n                    });\n                  } catch (e) {\n                    // This is best effort, leave the expression as value\n                  }\n                }\n              }\n\n              env = {\n                ...env,\n                ...newEnv,\n              };\n            }\n          });\n        }\n\n        return env;\n\n      case \"runner\": {\n        return {\n          os: \"macOS\",\n          temp: \"/tmp\",\n          tool_cache: \"/tmp/cache\",\n        };\n      }\n\n      case \"job\": {\n        const job = getJob(this.workflow, this.path);\n        if (!job) {\n          return {};\n        }\n\n        return {\n          status: \"success\",\n          container: {\n            id: \"\",\n            network: \"\",\n          },\n          services: job.services,\n        };\n      }\n\n      case \"needs\": {\n        const job = getJob(this.workflow, this.path);\n        if (!job) {\n          return {};\n        }\n\n        return (\n          job.needs?.reduce((r, jobId) => {\n            const outputs: { [key: string]: any } =\n              this.workflow.jobs[jobId].outputs || {};\n\n            for (const output of Object.keys(outputs)) {\n              if (containsExpression(outputs[output])) {\n                // If the output reference another expression, mark it as undetermined for now.\n                outputs[output] = Undetermined;\n              }\n            }\n\n            return {\n              ...r,\n              [jobId]: {\n                result: \"success\",\n                outputs,\n              },\n            };\n          }, {}) || {}\n        );\n      }\n\n      case \"matrix\": {\n        const job = getJob(this.workflow, this.path);\n        if (!job) {\n          return {};\n        }\n\n        if (job.strategy?.matrix) {\n          if (typeof job.strategy.matrix === \"string\" /* Expression */) {\n            // Matrix is an expression, mark this as a dynamic context. Currently we cannot reason about those\n            return DynamicContext;\n          }\n\n          // Merge all values to all invocations. Not all of them will be available all the time, but for\n          // validation (and completion) purposes this is good enough\n          return mergeDeep({}, ...job.strategy.matrix);\n        }\n\n        return {};\n      }\n\n      case \"strategy\": {\n        const job = getJob(this.workflow, this.path);\n        return job?.strategy || {};\n      }\n\n      case \"steps\": {\n        // Check if we are in a step\n        const stepsIdx = this.path\n          .map((x) => (Array.isArray(x) ? x[0] : x))\n          .indexOf(\"steps\");\n        if (stepsIdx === -1) {\n          return {};\n        }\n\n        // Find the current job\n        const job = getJob(this.workflow, this.path);\n        if (!job) {\n          return {};\n        }\n\n        // Find the current step\n        const step = iteratePath(\n          this.path.slice(0, stepsIdx + 1),\n          this.workflow\n        ) as Step;\n\n        const stepIdx = job.steps.indexOf(step);\n        if (stepIdx === -1) {\n          return {};\n        }\n\n        // Iterate over all previous steps\n        return job.steps.slice(0, stepIdx + 1).reduce(\n          (r, step, stepIdx) => ({\n            ...r,\n            [step.id || `${stepIdx}`]: {\n              outputs: DynamicContext, // They might come from an action, we cannot determine those\n              outcome: \"success\",\n              conclusion: \"success\",\n            },\n          }),\n          {}\n        );\n      }\n\n      case \"secrets\":\n        if (!Array.isArray(this.secrets)) {\n          return DynamicContext;\n        }\n\n        return this.secrets.reduce((s, name) => {\n          s[name] = \"***\";\n          return s;\n        }, {});\n    }\n  }\n}\n","import { Context } from \"../../types\";\nimport { ContextProviderFactory } from \"../parser/complete\";\nimport { DynamicContext } from \"../expressions/types\";\nimport { EditContextProvider } from \"./contextProvider\";\nimport { PropertyPath } from \"../utils/path\";\nimport { TTLCache } from \"../utils/cache\";\nimport { Workflow } from \"../workflow\";\n\nexport function _getContextProviderFactory(\n  context: Context,\n  cache: TTLCache\n): ContextProviderFactory {\n  return {\n    get: async (workflow: Workflow, path: PropertyPath) => {\n      let secrets: string[] | typeof DynamicContext;\n\n      try {\n        secrets = await cache.get(\n          `${context.owner}/${context.repository}/secrets`,\n          context.timeToCacheResponsesInMS,\n          async () => {\n            if (!context?.client?.actions) {\n              return DynamicContext;\n            }\n\n            // Use a set to dedupe repo and org secrets\n            const secrets = new Set<string>([\"GITHUB_TOKEN\"]);\n\n            // Get repo secrets\n            const p: Promise<unknown>[] = [];\n            p.push(\n              (async () => {\n                const repoSecretsResponse = await context.client.actions.listRepoSecrets(\n                  {\n                    owner: context.owner,\n                    repo: context.repository,\n                  }\n                );\n\n                repoSecretsResponse.data.secrets.forEach((x) =>\n                  secrets.add(x.name)\n                );\n              })()\n            );\n\n            // Get org secrets\n            if (context.ownerIsOrg && context.orgFeaturesEnabled) {\n              // Org secrets need more permissions and are more likely to fail. If we cannot get org secrets\n              // we still want to return the repo secrets.\n              p.push(\n                (async () => {\n                  try {\n                    const orgSecretsResponse = await context.client.actions.listOrgSecrets(\n                      {\n                        org: context.owner,\n                        repo: context.repository,\n                      }\n                    );\n\n                    orgSecretsResponse.data.secrets.forEach((x) =>\n                      secrets.add(x.name)\n                    );\n                  } catch (e) {\n                    console.error(e);\n                    secrets.add(\n                      `:: Could not retrieve org secrets {e.?message}`\n                    );\n                  }\n                })()\n              );\n            }\n\n            await Promise.all(p);\n\n            return Array.from(secrets.values());\n          }\n        );\n      } catch (e) {\n        // TODO: CS: Provide this error somehow to the caller to display to the user\n        console.error(e);\n        secrets = [\"GITHUB_TOKEN\", `:: Could not load secrets: ${e?.message}`];\n      }\n\n      return new EditContextProvider(workflow, path, secrets);\n    },\n  };\n}\n","import { NodeDescMap, ValueDesc } from \"../../parser/schema\";\n\nimport { mergeDeep } from \"../../utils/deepMerge\";\n\nconst _events: [string, string, ([string, string] | string)[]][] = [\n  [\n    \"check_run\",\n    \"Runs your workflow anytime the check_run event occurs. More than one activity type triggers this event. For information about the REST API, see https://developer.github.com/v3/checks/runs.\",\n    [\"created\", \"rerequested\", \"completed\", \"requested_action\"],\n  ],\n  [\n    \"check_suite\",\n    \"Runs your workflow anytime the check_suite event occurs. More than one activity type triggers this event. For information about the REST API, see https://developer.github.com/v3/checks/suites/.\",\n    [\"completed\", \"requested\", \"rerequested\"],\n  ],\n  [\n    \"create\",\n    \"Runs your workflow anytime someone creates a branch or tag, which triggers the create event. For information about the REST API, see https://developer.github.com/v3/git/refs/#create-a-reference.\",\n    [],\n  ],\n  [\n    \"delete\",\n    \"Runs your workflow anytime someone deletes a branch or tag, which triggers the delete event. For information about the REST API, see https://developer.github.com/v3/git/refs/#delete-a-reference.\",\n    [],\n  ],\n  [\n    \"deployment\",\n    \"Runs your workflow anytime someone creates a deployment, which triggers the deployment event. Deployments created with a commit SHA may not have a Git ref. For information about the REST API, see https://developer.github.com/v3/repos/deployments/.\",\n    [],\n  ],\n  [\n    \"deployment_status\",\n    \"Runs your workflow anytime a third party provides a deployment status, which triggers the deployment_status event. Deployments created with a commit SHA may not have a Git ref. For information about the REST API, see https://developer.github.com/v3/repos/deployments/#create-a-deployment-status.\",\n    [],\n  ],\n  [\n    \"fork\",\n    \"Runs your workflow anytime when someone forks a repository, which triggers the fork event. For information about the REST API, see https://developer.github.com/v3/repos/forks/#create-a-fork.\",\n    [],\n  ],\n  [\n    \"gollum\",\n    \"Runs your workflow when someone creates or updates a Wiki page, which triggers the gollum event.\",\n    [],\n  ],\n  [\n    \"issue_comment\",\n    \"Runs your workflow anytime the issue_comment event occurs. More than one activity type triggers this event. For information about the REST API, see https://developer.github.com/v3/issues/comments/.\",\n    [],\n  ],\n  [\n    \"issues\",\n    \"Runs your workflow anytime the issues event occurs. More than one activity type triggers this event. For information about the REST API, see https://developer.github.com/v3/issues.\",\n    [\n      [\"opened\", \"\"],\n      [\"edited\", \"\"],\n      [\"deleted\", \"\"],\n      [\"transferred\", \"\"],\n      [\"pinned\", \"\"],\n      [\"unpinned\", \"\"],\n      [\"closed\", \"\"],\n      [\"reopened\", \"\"],\n      [\"assigned\", \"\"],\n      [\"unassigned\", \"\"],\n      [\"labeled\", \"\"],\n      [\"unlabeled\", \"\"],\n      [\"locked\", \"\"],\n      [\"unlocked\", \"\"],\n      [\"milestoned\", \"\"],\n      [\"demilestoned\", \"\"],\n    ],\n  ],\n  [\n    \"label\",\n    \"Runs your workflow anytime the label event occurs. More than one activity type triggers this event. For information about the REST API, see https://developer.github.com/v3/issues/labels/.\",\n    [\"created\", \"edited\", \"deleted\"],\n  ],\n  [\n    \"member\",\n    \"Runs your workflow anytime the member event occurs. More than one activity type triggers this event. For information about the REST API, see https://developer.github.com/v3/repos/collaborators/.\",\n    [\"added\", \"edited\", \"deleted\"],\n  ],\n  [\n    \"milestone\",\n    \"Runs your workflow anytime the milestone event occurs. More than one activity type triggers this event. For information about the REST API, see https://developer.github.com/v3/issues/milestones/.\",\n    [\"created\", \"closed\", \"opened\", \"edited\", \"deleted\"],\n  ],\n  [\n    \"page_build\",\n    \"Runs your workflow anytime someone pushes to a GitHub Pages-enabled branch, which triggers the page_build event. For information about the REST API, see https://developer.github.com/v3/repos/pages/.\",\n    [],\n  ],\n  [\n    \"project\",\n    \"Runs your workflow anytime the project event occurs. More than one activity type triggers this event. For information about the REST API, see https://developer.github.com/v3/projects/.\",\n    [\"created\", \"updated\", \"closed\", \"reopened\", \"edited\", \"deleted\"],\n  ],\n  [\n    \"project_card\",\n    \"Runs your workflow anytime the project_card event occurs. More than one activity type triggers this event. For information about the REST API, see https://developer.github.com/v3/projects/cards.\",\n    [\"created\", \"moved\", \"converted\", \"edited\", \"deleted\"],\n  ],\n  [\n    \"project_column\",\n    \"Runs your workflow anytime the project_column event occurs. More than one activity type triggers this event. For information about the REST API, see https://developer.github.com/v3/projects/columns.\",\n    [\"created\", \"updated\", \"moved\", \"deleted\"],\n  ],\n  [\n    \"public\",\n    \"Runs your workflow anytime someone makes a private repository public, which triggers the public event. For information about the REST API, see https://developer.github.com/v3/repos/#edit.\",\n    [],\n  ],\n  [\n    \"pull_request\",\n    \"Runs your workflow anytime the pull_request event occurs. More than one activity type triggers this event. For information about the REST API, see https://developer.github.com/v3/pulls.\\nNote: Workflows do not run on private base repositories when you open a pull request from a forked repository.\\nWhen you create a pull request from a forked repository to the base repository, GitHub sends the pull_request event to the base repository and no pull request events occur on the forked repository.\\nWorkflows don't run on forked repositories by default. You must enable GitHub Actions in the Actions tab of the forked repository.\\nThe permissions for the GITHUB_TOKEN in forked repositories is read-only. For more information about the GITHUB_TOKEN, see https://help.github.com/en/articles/virtual-environments-for-github-actions.\",\n    [\n      [\"assigned\", \"\"],\n      [\"unassigned\", \"\"],\n      [\"labeled\", \"\"],\n      [\"unlabeled\", \"\"],\n      [\"opened\", \"\"],\n      [\"edited\", \"\"],\n      [\"closed\", \"\"],\n      [\"reopened\", \"\"],\n      [\"synchronize\", \"\"],\n      [\"ready_for_review\", \"\"],\n      [\"locked\", \"\"],\n      [\"unlocked\", \"\"],\n      [\"review_requested\", \"\"],\n      [\"review_request_removed\", \"\"],\n    ],\n  ],\n  [\n    \"pull_request_review\",\n    \"Runs your workflow anytime the pull_request_review event occurs. More than one activity type triggers this event. For information about the REST API, see https://developer.github.com/v3/pulls/reviews.\\nNote: Workflows do not run on private base repositories when you open a pull request from a forked repository.\\nWhen you create a pull request from a forked repository to the base repository, GitHub sends the pull_request event to the base repository and no pull request events occur on the forked repository.\\nWorkflows don't run on forked repositories by default. You must enable GitHub Actions in the Actions tab of the forked repository.\\nThe permissions for the GITHUB_TOKEN in forked repositories is read-only. For more information about the GITHUB_TOKEN, see https://help.github.com/en/articles/virtual-environments-for-github-actions.\",\n    [\"submitted\", \"edited\", \"dismissed\"],\n  ],\n  [\n    \"pull_request_review_comment\",\n    \"Runs your workflow anytime a comment on a pull request's unified diff is modified, which triggers the pull_request_review_comment event. More than one activity type triggers this event. For information about the REST API, see https://developer.github.com/v3/pulls/comments.\\nNote: Workflows do not run on private base repositories when you open a pull request from a forked repository.\\nWhen you create a pull request from a forked repository to the base repository, GitHub sends the pull_request event to the base repository and no pull request events occur on the forked repository.\\nWorkflows don't run on forked repositories by default. You must enable GitHub Actions in the Actions tab of the forked repository.\\nThe permissions for the GITHUB_TOKEN in forked repositories is read-only. For more information about the GITHUB_TOKEN, see https://help.github.com/en/articles/virtual-environments-for-github-actions.\",\n    [\"created\", \"edited\", \"deleted\"],\n  ],\n  [\n    \"pull_request_target\",\n    \"This event runs in the context of the base of the pull request, rather than in the merge commit as the `pull_request` event does. This prevents executing unsafe workflow code from the head of the pull request that could alter your repository or steal any secrets you use in your workflow. This event allows you to do things like create workflows that label and comment on pull requests based on the contents of the event payload.\",\n    [\n      [\"assigned\", \"\"],\n      [\"unassigned\", \"\"],\n      [\"labeled\", \"\"],\n      [\"unlabeled\", \"\"],\n      [\"opened\", \"\"],\n      [\"edited\", \"\"],\n      [\"closed\", \"\"],\n      [\"reopened\", \"\"],\n      [\"synchronize\", \"\"],\n      [\"ready_for_review\", \"\"],\n      [\"locked\", \"\"],\n      [\"unlocked\", \"\"],\n      [\"review_requested\", \"\"],\n      [\"review_request_removed\", \"\"],\n    ],\n  ],\n  [\n    \"push\",\n    \"Runs your workflow when someone pushes to a repository branch, which triggers the push event.\\nNote: The webhook payload available to GitHub Actions does not include the added, removed, and modified attributes in the commit object. You can retrieve the full commit object using the REST API. For more information, see https://developer.github.com/v3/repos/commits/#get-a-single-commit.\",\n    [],\n  ],\n  [\"registry_package\", \"\", []],\n  [\n    \"release\",\n    \"Runs your workflow anytime the release event occurs. More than one activity type triggers this event. For information about the REST API, see https://developer.github.com/v3/repos/releases/.\",\n    [\"published\", \"unpublished\", \"created\", \"edited\", \"deleted\", \"prereleased\"],\n  ],\n  [\"repository_dispatch\", \"\", []],\n  [\n    \"schedule\",\n    \"You can schedule a workflow to run at specific UTC times using POSIX cron syntax (https://pubs.opengroup.org/onlinepubs/9699919799/utilities/crontab.html#tag_20_25_07). Scheduled workflows run on the latest commit on the default or base branch. The shortest interval you can run scheduled workflows is once every 5 minutes.\\nNote: GitHub Actions does not support the non-standard syntax @yearly, @monthly, @weekly, @daily, @hourly, and @reboot.\\nYou can use crontab guru (https://crontab.guru/). to help generate your cron syntax and confirm what time it will run. To help you get started, there is also a list of crontab guru examples (https://crontab.guru/examples.html).\",\n    [],\n  ],\n  [\n    \"status\",\n    \"Runs your workflow anytime the status of a Git commit changes, which triggers the status event. For information about the REST API, see https://developer.github.com/v3/repos/statuses/.\",\n    [],\n  ],\n  [\n    \"watch\",\n    \"Runs your workflow anytime the watch event occurs. More than one activity type triggers this event. For information about the REST API, see https://developer.github.com/v3/activity/starring/.\",\n    [],\n  ],\n  [\"workflow_call\", \"Allows workflows to be reused by other workflows.\", []],\n  [\"workflow_dispatch\", \"\", []],\n  [\"workflow_run\", \"\", []],\n];\n\nexport const events: ValueDesc[] = _events.map(([value, description]) => ({\n  value,\n  description,\n}));\n\nconst tagBranchPathFilters: NodeDescMap = {\n  branches: {\n    type: \"sequence\",\n    itemDesc: {\n      type: \"value\",\n      // TODO: Suggest branches from the repo?\n    },\n  },\n  \"branches-ignore\": {\n    type: \"sequence\",\n    itemDesc: {\n      type: \"value\",\n      // TODO: Suggest branches from the repo?\n    },\n  },\n  tags: {\n    type: \"sequence\",\n    itemDesc: {\n      type: \"value\",\n      // TODO: Suggest tags from the repo?\n    },\n  },\n  \"tags-ignore\": {\n    type: \"sequence\",\n    itemDesc: {\n      type: \"value\",\n      // TODO: Suggest tags from the repo?\n    },\n  },\n  paths: {\n    type: \"sequence\",\n    itemDesc: {\n      type: \"value\",\n    },\n  },\n  \"paths-ignore\": {\n    type: \"sequence\",\n    itemDesc: {\n      type: \"value\",\n    },\n  },\n};\n\nexport const eventMap: NodeDescMap = mergeDeep(\n  {},\n  // Add all events to map\n  _events.reduce(\n    (map, [event, description, types]) => ({\n      ...map,\n      [event]: {\n        type: \"map\",\n        description: description,\n        keys:\n          (types.length > 0 && {\n            types: {\n              type: \"sequence\",\n              itemDesc: {\n                type: \"value\",\n                allowedValues: types.map((type) => ({\n                  value: Array.isArray(type) ? type[0] : type,\n                  description: Array.isArray(type) ? type[1] : undefined,\n                })),\n              },\n            },\n          }) ||\n          undefined,\n      },\n    }),\n    {}\n  ),\n  // Override specific ones with special properties\n  {\n    push: {\n      type: \"map\",\n      keys: {\n        ...tagBranchPathFilters,\n      },\n    },\n    pull_request: {\n      type: \"map\",\n      keys: {\n        ...tagBranchPathFilters,\n      },\n    },\n    pull_request_target: {\n      type: \"map\",\n      keys: {\n        ...tagBranchPathFilters,\n      },\n    },\n    schedule: {\n      type: \"sequence\",\n      itemDesc: {\n        type: \"map\",\n        keys: {\n          cron: {\n            type: \"value\",\n            // TODO: Validate cron\n            //customValidator: (node, x) => {},\n          },\n        },\n        required: [\"cron\"],\n      },\n    },\n    workflow_dispatch: {\n      type: \"map\",\n      description: \"Event that can be manually triggered\",\n      keys: {\n        inputs: {\n          type: \"map\",\n          itemDesc: {\n            type: \"map\",\n            keys: {\n              required: {\n                type: \"value\",\n              },\n              description: {\n                type: \"value\",\n              },\n              type: {\n                type: \"value\",\n                allowedValues: [\n                  { value: \"boolean\" },\n                  { value: \"string\" },\n                  { value: \"choice\" },\n                  { value: \"environment\" },\n                ],\n              },\n              options: {\n                type: \"sequence\",\n              },\n              default: {\n                type: \"value\",\n              },\n            },\n          },\n        },\n      },\n    },\n    workflow_call: {\n      type: \"map\",\n      description: \"Allows workflows to be reused by other workflows.\",\n      keys: {\n        inputs: {\n          type: \"map\",\n          description:\n            \"When using the `workflow_call` event, you can optionally specify inputs that are passed to the called workflow from the caller workflow.\",\n          itemDesc: {\n            type: \"map\",\n            keys: {\n              description: {\n                type: \"value\",\n                description: \"A string description of the input parameter.\",\n              },\n              deprecationMessage: {\n                type: \"value\",\n                description:\n                  \"A string shown to users using the deprecated input.\",\n              },\n              required: {\n                type: \"value\",\n                description:\n                  \"A boolean to indicate whether the action requires the input parameter. Set to true when the parameter is required.\",\n              },\n              type: {\n                description:\n                  \"Required if input is defined for the on.workflow_call keyword. The value of this parameter is a string specifying the data type of the input. This must be one of: boolean, number, or string.\",\n                type: \"value\",\n                allowedValues: [\n                  { value: \"boolean\" },\n                  { value: \"number\" },\n                  { value: \"string\" },\n                ],\n              },\n              default: {\n                type: \"value\",\n                description:\n                  \"The default value is used when an input parameter isn't specified in a workflow file.\",\n              },\n            },\n          },\n        },\n        secrets: {\n          description:\n            \"A map of the secrets that can be used in the called workflow. Within the called workflow, you can use the secrets context to refer to a secret.\",\n          type: \"map\",\n          itemDesc: {\n            type: \"map\",\n            keys: {\n              description: {\n                type: \"value\",\n                description: \"A string description of the secret.\",\n              },\n              required: {\n                type: \"value\",\n                description:\n                  \"A boolean to indicate whether the workflow requires the secret.\",\n              },\n            },\n          },\n        },\n      },\n    },\n  } as NodeDescMap\n);\n","import { CustomValueProvider } from \"../../parser/schema\";\n\nexport const NeedsCustomValueProvider: CustomValueProvider = async (\n  _,\n  workflow,\n  path\n) => {\n  const jobId = path[path.length - 2];\n  return (\n    (jobId &&\n      workflow?.jobs &&\n      Object.keys(workflow.jobs)\n        .filter((x) => x !== jobId)\n        .map((x) => ({\n          value: x,\n        }))) ||\n    []\n  );\n};\n","import {\n  CustomValue,\n  CustomValueProvider,\n  CustomValueValidation,\n  NodeDesc,\n} from \"../../parser/schema\";\nimport { PropertyPath, iteratePath } from \"../../utils/path\";\nimport { RemoteUses, Step, Workflow } from \"../../workflow\";\n\nimport { Context } from \"../../../types\";\nimport { TTLCache } from \"../../utils/cache\";\nimport { load } from \"js-yaml\";\n\nasync function getActionYamlContent(\n  context: Context,\n  uses: RemoteUses\n): Promise<string | undefined> {\n  if (context?.client?.repos) {\n    // TODO: CS: Think about how to surface API errors to consumers of the library. E.g., the token might\n    // be invalid, or it might not meet SSO requirements\n    let contentResp = await context.client.repos.getContent({\n      owner: uses.owner,\n      repo: uses.repository,\n      path: \"action.yml\",\n      ref: uses.ref,\n    });\n\n    if ((contentResp.status as any) === 404) {\n      // There isn't an API to easily get two different files, when we cannot find `action.yml`, look\n      // for `action.yaml`, too.\n      // It might be okay to make two calls in parallel but for now this seems to work.\n      contentResp = await context.client.repos.getContent({\n        owner: uses.owner,\n        repo: uses.repository,\n        path: \"action.yaml\",\n        ref: uses.ref,\n      });\n    }\n\n    if ((contentResp as any)?.data?.content) {\n      // Response is base64 encoded, so decode\n      const buff = Buffer.from((contentResp as any).data.content, \"base64\");\n      let text = buff.toString(\"utf-8\");\n      // Remove any null bytes - see https://github.com/cschleiden/vscode-github-actions/issues/42\n      text = text.replace(\"\\0\", \"\");\n      return text;\n    }\n  }\n\n  return undefined;\n}\n\nexport const actionsInputProvider = (\n  context: Context,\n  cache: TTLCache\n): CustomValueProvider => async (\n  _: NodeDesc,\n  workflow: Workflow | undefined,\n  path: PropertyPath\n): Promise<CustomValue[] | undefined> => {\n  if (!workflow) {\n    return [];\n  }\n\n  // jobs:\n  //   foo:\n  //     steps:\n  //     - uses: \"actions/checkout@v2\"\n  //       with:\n  //         | <- This is where this gets called\n\n  // First, find the `uses`. Strip of the last `with` in the path, need the step level\n  if (path[path.length - 1] === \"with\") {\n    path.pop();\n  }\n\n  const step = iteratePath(path, workflow) as Step;\n  if (!step || !(\"uses\" in step) || step.uses.type !== \"remote\") {\n    return [];\n  }\n\n  const uses = step.uses;\n\n  return cache.get<CustomValue[] | undefined>(\n    `${uses.owner}/${uses.repository}@${uses.ref}`,\n    // Cache actions parameters for a long time\n    1_000 * 60 * 60,\n    async (): Promise<CustomValue[] | undefined> => {\n      const text = await getActionYamlContent(context, uses);\n      if (text) {\n        try {\n          const { inputs } = load(text, {\n            json: true, // Support unicode characters in unquoted strings\n          });\n          if (inputs) {\n            return Object.keys(inputs).map((key) => ({\n              value: key,\n              description: `${\n                inputs[key].description || \"\"\n              } \\n\\nrequired: \\`${!!inputs[key].required}\\` \\n\\n${\n                (inputs[key].default && `default:\\`${inputs[key].default}\\``) ||\n                \"\"\n              }`,\n              validation: !!inputs[key].required\n                ? CustomValueValidation.Required\n                : CustomValueValidation.None,\n            }));\n          }\n        } catch (e) {\n          console.error(e);\n        }\n      }\n\n      return undefined;\n    }\n  );\n};\n","import { CompletionOption, Context, Hover } from \"../../types\";\nimport { complete as genericComplete } from \"../parser/complete\";\nimport { hover as genericHover } from \"../parser/hover\";\nimport { parse as genericParse, WorkflowDocument } from \"../parser/parser\";\nimport {\n  MapNodeDesc,\n  NodeDesc,\n  ValueDesc,\n  ValueNodeDesc,\n} from \"../parser/schema\";\nimport { TTLCache } from \"../utils/cache\";\nimport { _getContextProviderFactory } from \"./contextCompletion\";\nimport { eventMap, events } from \"./schema/events\";\nimport { NeedsCustomValueProvider } from \"./schema/needs\";\nimport { actionsInputProvider } from \"./valueProvider/actionsInputProvider\";\n\nconst cache = new TTLCache();\n\nconst value = (description?: string): NodeDesc => ({\n  type: \"value\",\n  description,\n});\n\nconst concurrencyGroupKey: ValueNodeDesc = {\n  type: \"value\",\n  description:\n    \"Concurreny group key. Expressions can use the `github` context.\",\n  supportsExpression: true,\n};\n\nconst concurrency: NodeDesc = {\n  type: \"oneOf\",\n  description:\n    \"Concurrency ensures that only a single job or workflow using the same concurrency group will run at a time.\",\n  oneOf: [\n    concurrencyGroupKey,\n    {\n      type: \"map\",\n      keys: {\n        group: concurrencyGroupKey,\n        \"cancel-in-progress\": {\n          type: \"value\",\n        },\n      },\n    },\n  ],\n};\n\nconst permissionValue: ValueNodeDesc = {\n  type: \"value\",\n  allowedValues: [{ value: \"read\" }, { value: \"write\" }, { value: \"none\" }],\n};\n\nconst permissions: NodeDesc = {\n  type: \"oneOf\",\n  description:\n    \"Concurrency ensures that only a single job or workflow using the same concurrency group will run at a time.\",\n  oneOf: [\n    {\n      type: \"value\",\n      allowedValues: [{ value: \"read-all\" }, { value: \"write-all\" }],\n    },\n    {\n      type: \"map\",\n      keys: {\n        actions: permissionValue,\n        checks: permissionValue,\n        contents: permissionValue,\n        deployments: permissionValue,\n        discussions: permissionValue,\n        \"id-token\": permissionValue,\n        issues: permissionValue,\n        packages: permissionValue,\n        pages: permissionValue,\n        \"pull-requests\": permissionValue,\n        \"repository-projects\": permissionValue,\n        \"security-events\": permissionValue,\n        statuses: permissionValue,\n      },\n    },\n  ],\n};\n\nconst env: MapNodeDesc = {\n  type: \"map\",\n  itemDesc: {\n    type: \"value\",\n  },\n};\n\nconst shell: NodeDesc = {\n  type: \"value\",\n  allowedValues: [\n    { value: \"bash\" },\n    { value: \"pwsh\" },\n    { value: \"python\" },\n    { value: \"sh\" },\n    { value: \"cmd\" },\n    { value: \"powershell\" },\n  ],\n  description:\n    \"https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#custom-shell\",\n};\n\nconst defaults: MapNodeDesc = {\n  type: \"map\",\n  keys: {\n    run: {\n      type: \"map\",\n      keys: {\n        shell,\n        \"working-directory\": value(),\n      },\n    },\n  },\n};\n\nconst container = (): NodeDesc => ({\n  type: \"map\",\n  keys: {\n    image: value(\n      \"The Docker image to use as the container to run the action. The value can be the Docker Hub image name or a public docker registry name.\"\n    ),\n    env,\n    ports: {\n      type: \"sequence\",\n      itemDesc: value(),\n      description: \"Sets an array of ports to expose on the container.\",\n    },\n    volumes: {\n      type: \"sequence\",\n      itemDesc: value(\"Pattern: ^[^:]+:[^:]+$\"),\n      description:\n        \"Sets an array of volumes for the container to use. You can use volumes to share data between services or other steps in a job. You can specify named Docker volumes, anonymous Docker volumes, or bind mounts on the host.\\nTo specify a volume, you specify the source and destination path: <source>:<destinationPath>\\nThe <source> is a volume name or an absolute path on the host machine, and <destinationPath> is an absolute path in the container.\",\n    },\n    options: value(\n      \"Additional Docker container resource options. For a list of options, see https://docs.docker.com/engine/reference/commandline/create/#options.\"\n    ),\n  },\n  required: [\"image\"],\n});\n\nconst runsOn = (context: Context): NodeDesc => ({\n  type: \"value\",\n  description:\n    \"The type of machine to run the job on. The machine can be either a GitHub-hosted runner, or a self-hosted runner.\",\n\n  supportsExpression: true,\n\n  customValueProvider: async () =>\n    cache.get<ValueDesc[]>(\n      `${context.owner}/${context.repository}/runs-on-labels`,\n      context.timeToCacheResponsesInMS,\n      async () => {\n        const labels = new Set<string>([\n          \"ubuntu-22.04\",\n          \"ubuntu-latest\",\n          \"ubuntu-20.04\",\n          \"ubuntu-18.04\",\n          \"windows-latest\",\n          \"windows-2022\",\n          \"windows-2019\",\n          \"windows-2016\",\n          \"macos-latest\",\n          \"macos-12\",\n          \"macos-11\",\n          \"macos-10.15\",\n          \"self-hosted\",\n        ]);\n\n        if (context?.client?.actions) {\n          try {\n            const runnersResp =\n              await context.client.actions.listSelfHostedRunnersForRepo({\n                owner: context.owner,\n                repo: context.repository,\n              });\n\n            if (runnersResp && runnersResp.data.runners) {\n              runnersResp.data.runners.forEach((r) =>\n                (r as any)?.labels?.forEach((l: { name: string }) =>\n                  labels.add(l.name)\n                )\n              );\n            }\n          } catch (e) {\n            console.log(\n              `Error while retrieving runner labels, falling back to defaults`,\n              e\n            );\n          }\n        }\n\n        return Array.from(labels.values()).map((x) => ({\n          value: x,\n        }));\n      }\n    ),\n});\n\nconst environment = (context: Context): NodeDesc => ({\n  type: \"value\",\n  description:\n    \"The environment that the job references. All environment protection rules must pass before a job referencing the environment is sent to a runner.\",\n\n  supportsExpression: true,\n\n  customValueProvider: async () =>\n    cache.get<ValueDesc[] | undefined>(\n      `${context.owner}/${context.repository}/environment-names`,\n      context.timeToCacheResponsesInMS,\n      async () => {\n        if (context?.client?.repos) {\n          try {\n            const environmentsResp =\n              await context.client.repos.getAllEnvironments({\n                owner: context.owner,\n                repo: context.repository,\n              });\n\n            if (environmentsResp && environmentsResp.data.environments) {\n              return environmentsResp.data.environments.map((e) => ({\n                value: e.name,\n                description: e.protection_rules?.length\n                  ? `Protection rules:\\n${e.protection_rules\n                      .map((pr) => `- ${pr.type}`)\n                      .join(\n                        \"\\n\"\n                      )}\\n\\nLearn more: [Protection rules](https://docs.github.com/en/actions/reference/environments#environment-protection-rules)`\n                  : undefined,\n              }));\n            }\n          } catch (e) {\n            console.log(`Error while retrieving environments`, e);\n          }\n        }\n\n        // Return undefined so any value is allowed\n        return undefined;\n      }\n    ),\n});\n\nconst job = (context: Context): NodeDesc => ({\n  type: \"map\",\n  keys: {\n    name: value(\"Optional custom name for this job\"),\n    concurrency,\n    permissions,\n    env,\n    needs: {\n      type: \"oneOf\",\n      oneOf: [\n        {\n          type: \"value\",\n          customValueProvider: NeedsCustomValueProvider,\n        },\n        {\n          type: \"sequence\",\n          itemDesc: {\n            type: \"value\",\n            customValueProvider: NeedsCustomValueProvider,\n          },\n        },\n      ],\n    },\n    outputs: {\n      type: \"map\",\n    },\n    environment: {\n      description: `The environment that the job references. All environment protection rules must pass before a job referencing the environment is sent to a runner. For more information, see [Environments](https://docs.github.com/en/free-pro-team@latest/actions/reference/environments).\n\nYou can provide the environment as only the environment \\`name\\`, or as an environment object with the \\`name\\` and \\`url\\`.`,\n      type: \"oneOf\",\n      oneOf: [\n        environment(context),\n        {\n          type: \"map\",\n          keys: {\n            name: environment(context),\n            url: value(\n              `The URL maps to \\`environment_url\\` in the deployments API. For more information about the deployments API, see [Deployments](https://docs.github.com/en/free-pro-team@latest/rest/reference/repos#deployments).\\n\\nThe URL can be an expression and can use any context except for the \\`secrets\\` context.`\n            ),\n          },\n          required: [\"name\"],\n        },\n      ],\n    },\n    defaults,\n    if: {\n      type: \"value\",\n      isExpression: true,\n    },\n    \"timeout-minutes\": value(),\n    \"continue-on-error\": value(),\n    container: container(),\n    services: {\n      type: \"map\",\n      itemDesc: container(),\n      description:\n        \"Additional containers to host services for a job in a workflow. These are useful for creating databases or cache services like redis. The runner on the virtual machine will automatically create a network and manage the life cycle of the service containers.\\nWhen you use a service container for a job or your step uses container actions, you don't need to set port information to access the service. Docker automatically exposes all ports between containers on the same network.\\nWhen both the job and the action run in a container, you can directly reference the container by its hostname. The hostname is automatically mapped to the service name.\\nWhen a step does not use a container action, you must access the service using localhost and bind the ports.\",\n    },\n    \"runs-on\": {\n      type: \"oneOf\",\n      oneOf: [\n        runsOn(context),\n        {\n          type: \"sequence\",\n          itemDesc: runsOn(context),\n        },\n      ],\n      description:\n        \"The type of machine to run the job on. The machine can be either a GitHub-hosted runner, or a self-hosted runner.\",\n    },\n    steps: {\n      type: \"sequence\",\n      itemDesc: {\n        type: \"map\",\n        keys: {\n          id: value(\n            \"A unique identifier for the step. You can use the id to reference the step in contexts. For more information, see https://help.github.com/en/articles/contexts-and-expression-syntax-for-github-actions.\"\n          ),\n          if: {\n            type: \"value\",\n            isExpression: true,\n          },\n          name: value(\"Optional custom name for the step\"),\n          uses: value(),\n          run: value(\n            \"Runs command-line programs using the operating system's shell. If you do not provide a `name`, the step name will default to the text specified in the `run` command.\"\n          ),\n          \"working-directory\": value(),\n          shell,\n          with: {\n            type: \"map\",\n            customValueProvider: actionsInputProvider(context, cache),\n          },\n          env,\n          \"continue-on-error\": value(),\n          \"timeout-minutes\": value(),\n        },\n      },\n    },\n    strategy: {\n      type: \"map\",\n      keys: {\n        matrix: {\n          type: \"oneOf\",\n          oneOf: [\n            {\n              type: \"map\",\n              // A matrix can use user-defined keys\n              allowUnknownKeys: true,\n              // Generic matrix description\n              itemDesc: {\n                type: \"sequence\",\n              },\n              // Handle `include` and `exclude` specifically\n              keys: {\n                include: {\n                  type: \"sequence\",\n                  itemDesc: {\n                    type: \"map\",\n                  },\n                },\n                exclude: {\n                  type: \"sequence\",\n                  itemDesc: {\n                    type: \"map\",\n                  },\n                },\n              },\n            },\n            {\n              type: \"value\",\n              description:\n                \"A matrix strategy can also be set using an expression. For example: `matrix: ${{fromJSON(needs.job1.outputs.matrix)}}`\",\n            },\n          ],\n          description:\n            \"A build matrix is a set of different configurations of the virtual environment. For example you might run a job against more than one supported version of a language, operating system, or tool. Each configuration is a copy of the job that runs and reports a status.\\nYou can specify a matrix by supplying an array for the configuration options. For example, if the GitHub virtual environment supports Node.js versions 6, 8, and 10 you could specify an array of those versions in the matrix.\\nWhen you define a matrix of operating systems, you must set the required runs-on keyword to the operating system of the current job, rather than hard-coding the operating system name. To access the operating system name, you can use the matrix.os context parameter to set runs-on. For more information, see https://help.github.com/en/articles/contexts-and-expression-syntax-for-github-actions.\",\n        },\n        \"fail-fast\": value(\n          \"When set to true, GitHub cancels all in-progress jobs if any matrix job fails. Default: true\"\n        ),\n        \"max-parallel\": value(\n          \"The maximum number of jobs that can run simultaneously when using a matrix job strategy. By default, GitHub will maximize the number of jobs run in parallel depending on the available runners on GitHub-hosted virtual machines.\"\n        ),\n      },\n      required: [\"matrix\"],\n    },\n    uses: value(\n      \"The location and version of a reusable workflow file to run as a job. For more information, see [Reusing workflows](https://docs.github.com/en/actions/using-workflows/reusing-workflows).\"\n    ),\n    secrets: {\n      type: \"oneOf\",\n      oneOf: [\n        {\n          type: \"value\",\n          allowedValues: [{ value: \"inherit\" }],\n        },\n        {\n          type: \"map\",\n          itemDesc: {\n            type: \"value\",\n          },\n        },\n      ],\n      description:\n        'A map of secrets that are passed to the called workflow. You can also use the \"inherit\" keyword to pass all the calling workflow\\'s secrets to the called workflow.',\n    },\n  },\n\n  required: [\"runs-on\", \"steps\"],\n});\n\nexport function _getSchema(context: Context): NodeDesc {\n  return {\n    type: \"map\",\n    keys: {\n      name: value(`Name of the workflow`),\n      concurrency,\n      defaults,\n      env,\n      permissions,\n      on: {\n        type: \"oneOf\",\n        oneOf: [\n          // Can be one of the events\n          {\n            type: \"value\",\n            allowedValues: events,\n          },\n          // Can be an array of events\n          {\n            type: \"sequence\",\n            itemDesc: {\n              type: \"value\",\n              allowedValues: events,\n            },\n          },\n          // Can be a map of events\n          {\n            type: \"map\",\n            keys: eventMap,\n          },\n        ],\n      },\n      jobs: {\n        type: \"map\",\n        itemDesc: job(context),\n      },\n    },\n\n    required: [\"on\", \"jobs\"],\n  };\n}\n\nexport async function parse(\n  context: Context,\n  filename: string,\n  input: string\n): Promise<WorkflowDocument> {\n  return genericParse(\n    filename,\n    input,\n    _getSchema(context),\n    _getContextProviderFactory(context, cache)\n  );\n}\n\nexport async function complete(\n  context: Context,\n  filename: string,\n  input: string,\n  pos: number\n): Promise<CompletionOption[]> {\n  return genericComplete(\n    filename,\n    input,\n    pos,\n    _getSchema(context),\n    _getContextProviderFactory(context, cache)\n  );\n}\n\nexport async function hover(\n  context: Context,\n  filename: string,\n  input: string,\n  pos: number\n): Promise<Hover | undefined> {\n  return genericHover(\n    filename,\n    input,\n    pos,\n    _getSchema(context),\n    _getContextProviderFactory(context, cache)\n  );\n}\n","interface CacheEntry<T> {\n  cachedAt: number;\n  content: T;\n}\n\nexport class TTLCache {\n  private cache = new Map<string, CacheEntry<unknown>>();\n\n  constructor(private defaultTTLinMS: number = 10 * 60 * 1000) {}\n\n  /**\n   *\n   * @param key Key to cache value under\n   * @param ttlInMS How long is the content valid. If optional, default value will be used\n   * @param getter Function to retrieve content if not in cache\n   */\n  async get<T>(\n    key: string,\n    ttlInMS: number | undefined,\n    getter: () => Promise<T>\n  ): Promise<T> {\n    const hasEntry = this.cache.has(key);\n    const e = hasEntry && this.cache.get(key);\n    if (\n      hasEntry &&\n      e &&\n      e.cachedAt > Date.now() - (ttlInMS || this.defaultTTLinMS)\n    ) {\n      return e.content as T;\n    }\n\n    try {\n      const content = await getter();\n\n      this.cache.set(key, {\n        cachedAt: Date.now(),\n        content,\n      });\n\n      return content;\n    } catch (e) {\n      this.cache.delete(key);\n      throw e;\n    }\n  }\n}\n"],"names":["expressionMarker","containsExpression","input","match","iterateExpressions","f","Array","from","matchAll","index","length","funcDescription","tojson","Undetermined","True","chevrotain","createToken","name","pattern","False","Null","LParens","RParens","LSquare","RSquare","Comma","Dot","ContextMemberOrKeyword","Lexer","NA","ContextMember","categories","Context","longer_alt","Contexts","map","c","RegExp","Operator","And","Or","Eq","NEq","LT","LTE","GT","GTE","Not","Function","contains","startsWith","endsWith","join","toJSON","fromJSON","hashFiles","success","always","failure","format","cancelled","Functions","StringLiteral","NumberLiteral","allTokens","group","SKIPPED","ExpressionLexer","ExpressionParser","CstParser","constructor","super","this","expression","RULE","SUBRULE1","subExpression","LABEL","MANY","CONSUME","SUBRULE2","OPTION","OR","ALT","SUBRULE","logicalGrouping","functionCall","contextAccess","value","array","contextMember","contextDotMember","contextBoxMember","MANY_SEP","SEP","DEF","OR1","functionParameters","OR2","filter","booleanValue","performSelfAnalysis","defaultRule","parser","BaseCstVisitor","getBaseCstVisitorConstructor","iteratePath","path","obj","p","ExpressionEvaluator","validateVisitor","ctx","context","result","visit","lhs","rhs","forEach","rhsOperand","idx","rhsResult","operator","_coerceValue","tokenMatcher","contextName","PATTERN","source","find","Error","cM","getContextValue","contextProvider","get","push","image","se","parameters","haystack","needle","isArray","indexOf","toLocaleLowerCase","JSON","stringify","parse","params","replace","slice","parseFloat","_removeQuotes","val","keepString","NaN","substring","evaluator","ExpressionError","lexErrors","parseErrors","x","message","evaluateExpression","_","g","lexResult","tokenize","tokens","cst","errors","replaceExpressions","Kind","DiagnosticKind","DUMMY_KEY","inPos","position","pos","findNode","node","startPosition","endPosition","n","kind","MAP","mapping","mappings","MAPPING","r","key","parent","SEQ","item","items","SCALAR","getPathFromNode","nodePath","unshift","shift","parseUses","ref","split","owner","repository","subdirectory","type","normalizeJob","job","_job$strategy","strategy","matrix","explicitMatrixKeys","Object","keys","matrixValues","explicitMatrixKey","invocations","inputs","inputKey","newResult","inputValue","crossProduct","toExclude","exclude","deepEqual","toInclude","include","findIndex","leftEqual","a","b","every","keyA","splice","normalizeMatrix","steps","step","uses","needs","keysA","DynamicContext","ExpressionValidator","dynamicNode","iterateContextPath","undefined","CustomValueValidation","kindToString","async","validateNode","nodeDesc","nodeToDesc","workflow","contextProviderFactory","diagnostics","reportTypeMismatch","expectedType","actualKind","scalarNode","set","isExpression","posOffset","expr","expressionPosition","removeExpressionMarker","e","console","error","validateExpression","validateExpressions","rawValue","supportsExpression","allowedValues","customValueProvider","_customValues","customValues","Warning","mapNode","seenKeys","Map","mappingDesc","itemDesc","required","requiredKeys","validation","Required","missingKey","has","allowUnknownKeys","allowedKeys","Set","unknownKeys","unknownKey","mappingNode","foundMatchingNode","nDesc","oneOf","filename","schema","jsYamlLoad","_unused","on","reduce","o","jobs","jobId","normalizeWorkflow","yamlRoot","safeLoad","isWarning","reason","mark","validationResult","validate","root","workflowST","filterAndSortCompletionOptions","partialInput","options","existingValues","sort","localeCompare","doComplete","desc","doc","searchInput","existingItems","inExpression","expressionComplete","mapDesc","line","existingKeys","_node$mappings","description","completeMapKeys","validTypes","add","trim","s","getCurrentLine","getValidOneOfTypes","one","inputPos","expressionPos","expressionFound","exp","start","startPos","substr","completeExpression","partialTokenVector","lastInputToken","tokenIdx","searchTerm","i","reverse","syntacticSuggestions","computeContentAssist","_Function$categoryMat","_Context$categoryMatc","categoryMatchesMap","nextTokenType","tokenTypeIdx","toLowerCase","getFunctionDescription","complete","newInput","newPos","lines","lineNo","linePos","l","colon","trimmedLine","spacer","_transform","completionOptions","doHover","allowedValue","m","_mapping$key","_desc$keys","_desc$keys$key","matchingValue","hover","isObject","mergeDeep","target","sources","assign","eventPayloads","check_run","commit_comment","content_reference","create","delete","deploy_key","deployment","deployment_status","fork","github_app_authorization","gollum","installation","installation_repositories","issue_comment","issues","label","marketplace_purchase","membership","meta","milestone","org_block","organization","package","page_build","ping","project","project_card","project_column","public","pull_request","pull_request_review","pull_request_review_comment","pull_request_target","release","repository_dispatch","repository_import","repository_vulnerability_alert","security_advisory","star","status","team","team_add","watch","workflow_dispatch","workflow_run","getEventPayload","events","event","getEvent","eventPayload","inputName","_workflow$on$workflow","default","getJob","jobsIdx","EditContextProvider","secrets","_this$workflow","_this$workflow2","event_name","token","sha","repository_owner","repositoryUrl","run_id","run_number","retention_days","run_attempt","actor","head_ref","base_ref","server_url","api_url","graphql_url","ref_name","ref_protected","ref_type","secret_source","workspace","action","event_path","action_repository","action_ref","env","newEnv","_extends","os","temp","tool_cache","container","id","network","services","_job$needs","outputs","output","stepsIdx","stepIdx","outcome","conclusion","_getContextProviderFactory","cache","timeToCacheResponsesInMS","_context$client","client","actions","listRepoSecrets","repo","data","ownerIsOrg","orgFeaturesEnabled","listOrgSecrets","org","Promise","all","values","_events","tagBranchPathFilters","branches","tags","paths","eventMap","types","schedule","cron","workflow_call","deprecationMessage","NeedsCustomValueProvider","actionsInputProvider","pop","text","repos","_contentResp","_contentResp$data","contentResp","getContent","content","Buffer","toString","getActionYamlContent","load","json","None","TTLCache","defaultTTLinMS","ttlInMS","getter","hasEntry","cachedAt","Date","now","concurrencyGroupKey","concurrency","permissionValue","permissions","checks","contents","deployments","discussions","packages","pages","statuses","shell","defaults","run","ports","volumes","runsOn","labels","runnersResp","listSelfHostedRunnersForRepo","runners","_r$labels","log","environment","_context$client2","environmentsResp","getAllEnvironments","environments","_e$protection_rules","protection_rules","pr","url","if","with","_getSchema","genericParse","genericComplete","genericHover"],"mappings":"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"}